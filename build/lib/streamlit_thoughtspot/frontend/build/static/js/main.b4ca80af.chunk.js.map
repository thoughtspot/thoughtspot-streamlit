{"version":3,"sources":["ThoughtspotSearchComponent.tsx","index.tsx"],"names":["withStreamlitConnection","args","component","host","sso","Object","keys","includes","height","width","dataSources","searchString","liveboardId","vizId","Streamlit","setFrameHeight","init","thoughtSpotHost","authType","AuthType","SAML","None","useEffect","element","document","getElementById","SearchEmbed","searchOptions","searchTokenString","executeSearch","frameParams","render","LiveboardEmbed","style","id","ReactDOM","StrictMode"],"mappings":"8OA6FeA,mBA/Dd,YAA2E,IAAtCC,EAAqC,EAArCA,KAEhCC,EAAYD,EAAI,UAEhBE,EAAOF,EAAI,KACXG,IAAMC,OAAOC,KAAKL,GAAMM,SAAS,QAASN,EAAI,IAC9CO,EAASH,OAAOC,KAAKL,GAAMM,SAAS,UAAYN,EAAI,OAAa,IACjEQ,EAAQJ,OAAOC,KAAKL,GAAMM,SAAS,SAAWN,EAAI,MAAY,IAC9DS,EAAcL,OAAOC,KAAKL,GAAMM,SAAS,eAAiBN,EAAI,YAAkB,GAChFU,EAAeN,OAAOC,KAAKL,GAAMM,SAAS,gBAAkBN,EAAI,aAAmB,KAEnFW,EAAuBP,OAAOC,KAAKL,GAAMM,SAAS,eAAiBN,EAAI,YAAkB,KACzFY,EAAgBR,OAAOC,KAAKL,GAAMM,SAAS,SAAWN,EAAI,MAAY,KAuCxE,OArCFa,IAAUC,eAAeP,GAGzBQ,YAAK,CACHC,gBAAiBd,EACjBe,SAAUd,EAAMe,IAASC,KAAOD,IAASE,OAG3CC,qBAAU,WACR,IAAIC,EAAiBC,SAASC,eAAe,YAE5B,UAAbvB,EACkB,IAAIwB,IAAYH,EAAS,CAC3CI,cAAc,CACZC,kBAAkBjB,EAClBkB,eAAc,GAEhBnB,YAAaA,EACboB,YAAa,CACTrB,MAAOA,EAAM,KACbD,OAAQA,EAAO,QAGTuB,SAEW,IAAIC,IAAeT,EAAS,CACjDX,YAAaA,EACbC,MAAOA,EACPiB,YAAa,CACTrB,MAAOA,EAAM,KACbD,OAAQA,EAAO,QAGNuB,YAKf,yBAAKE,MAAO,CAACxB,MAAMA,EAAM,KAAKD,OAAOA,EAAO,MAAO0B,GAAG,YAAtD,eC7ENC,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,OAEFZ,SAASC,eAAe,W","file":"static/js/main.b4ca80af.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport {\n  SearchEmbed,\n  AuthType,\n  init,\n  prefetch,\n  EmbedEvent,\n  HostEvent,\n  LiveboardEmbed\n}\nfrom '@thoughtspot/visual-embed-sdk';\nimport React, {useEffect, ReactElement, ReactNode} from \"react\"\n\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\n\n\n function ThoughtspotSearchComponent({args}: ComponentProps): ReactElement {\n\n  let component = args[\"component\"]\n\n  let host = args[\"host\"];\n  let sso = Object.keys(args).includes(\"sso\") ? args[\"sso\"] : false\n  let height = Object.keys(args).includes(\"height\") ? args[\"height\"] : 600\n  let width = Object.keys(args).includes(\"width\") ? args[\"width\"] : 1000\n  let dataSources = Object.keys(args).includes(\"datasources\") ? args[\"datasources\"] : []\n  let searchString = Object.keys(args).includes(\"searchstring\") ? args[\"searchstring\"] : null\n\n  let liveboardId : string = Object.keys(args).includes(\"liveboardid\") ? args[\"liveboardid\"] : null\n  let vizId :string = Object.keys(args).includes(\"vizid\") ? args[\"vizid\"] : null\n\n  Streamlit.setFrameHeight(height)\n\n  \n  init({\n    thoughtSpotHost: host,\n    authType: sso ? AuthType.SAML : AuthType.None,\n  });\n\n  useEffect(()=>{\n    var element : any =  document.getElementById('ts-embed');\n\n    if (component == \"search\"){\n      const searchEmbed = new SearchEmbed(element, {\n        searchOptions:{\n          searchTokenString:searchString,\n          executeSearch:true\n        },\n        dataSources: dataSources,\n        frameParams: {\n            width: width+\"px\",\n            height: height+\"px\",\n        },\n      });\n      searchEmbed.render()\n    }else{\n      const liveboardembed = new LiveboardEmbed(element, {\n        liveboardId: liveboardId,\n        vizId: vizId,\n        frameParams: {\n            width: width+\"px\",\n            height: height+\"px\",\n        },\n      });\n      liveboardembed.render()\n    }\n\n    })\n    return (\n      <div style={{width:width+\"px\",height:height+\"px\"}} id=\"ts-embed\">\n        TS Embed\n      </div>  \n    )\n }\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(ThoughtspotSearchComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ThoughtspotSearchComponent from \"./ThoughtspotSearchComponent\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThoughtspotSearchComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}