{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/component-template/template/my_component/frontend/src/ThoughtspotComponent.tsx\";\nimport { withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nfunction ThoughtspotComponent(_ref) {\n  let {\n    args\n  } = _ref;\n  useEffect(() => {// init({\n    //   thoughtSpotHost: \"https://se-thoughtspot-cloud.thoughtspot.cloud/\",\n    //   authType: AuthType.None,\n    // });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '600px',\n      height: '600px'\n    },\n    id: \"ts-embed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"TS Embed Div\");\n} // \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\n\nexport default withStreamlitConnection(ThoughtspotComponent);","map":{"version":3,"names":["withStreamlitConnection","React","useEffect","ThoughtspotComponent","args","width","height"],"sources":["/Users/nathan.schroeder/Documents/dev/component-template/template/my_component/frontend/src/ThoughtspotComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport {\n  SearchEmbed,\n  AuthType,\n  init,\n  prefetch,\n  EmbedEvent,\n  HostEvent\n}\nfrom '@thoughtspot/visual-embed-sdk';\nimport React, {useEffect, ReactElement, ReactNode} from \"react\"\n\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\n\n\n function ThoughtspotComponent({args}: ComponentProps): ReactElement {\n    useEffect(()=>{\n      // init({\n      //   thoughtSpotHost: \"https://se-thoughtspot-cloud.thoughtspot.cloud/\",\n      //   authType: AuthType.None,\n      // });\n\n    })\n    return (\n      <div style={{width:'600px',height:'600px'}} id=\"ts-embed\">\n        TS Embed Div\n      </div>  \n    )\n }\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(ThoughtspotComponent)\n"],"mappings":";AAAA,SAGEA,uBAHF,QAKO,yBALP;AAeA,OAAOC,KAAP,IAAeC,SAAf,QAAwD,OAAxD;;AAQA;AACA;AACA;AACA;AAGC,SAASC,oBAAT,OAAoE;EAAA,IAAtC;IAACC;EAAD,CAAsC;EACjEF,SAAS,CAAC,MAAI,CACZ;IACA;IACA;IACA;EAED,CANQ,CAAT;EAOA,oBACE;IAAK,KAAK,EAAE;MAACG,KAAK,EAAC,OAAP;MAAeC,MAAM,EAAC;IAAtB,CAAZ;IAA4C,EAAE,EAAC,UAA/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF;AAKF,C,CAEF;AACA;AACA;AACA;AACA;;;AACA,eAAeN,uBAAuB,CAACG,oBAAD,CAAtC"},"metadata":{},"sourceType":"module"}