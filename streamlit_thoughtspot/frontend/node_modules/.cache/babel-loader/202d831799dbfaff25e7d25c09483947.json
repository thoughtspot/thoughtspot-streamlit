{"ast":null,"code":"import { ERROR_MESSAGE } from './errors';\n/**\n * Copyright (c) 2023\n *\n * Utilities related to reading configuration objects\n *\n * @summary Config-related utils\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\n\nvar urlRegex = new RegExp(['(^(https?:)//)?', '(([^:/?#]*)(?::([0-9]+))?)', '(/{0,1}[^?#]*)', '(\\\\?[^#]*|)', '(#.*|)$' // hash\n].join(''));\n/**\n * Parse and construct the ThoughtSpot hostname or IP address\n * from the embed configuration object.\n * @param config\n */\n\nexport var getThoughtSpotHost = function getThoughtSpotHost(config) {\n  var urlParts = config.thoughtSpotHost.match(urlRegex);\n\n  if (!urlParts) {\n    throw new Error(ERROR_MESSAGE.INVALID_THOUGHTSPOT_HOST);\n  }\n\n  var protocol = urlParts[2] || window.location.protocol;\n  var host = urlParts[3];\n  var path = urlParts[6]; // Lose the trailing / if any\n\n  if (path.charAt(path.length - 1) === '/') {\n    path = path.substring(0, path.length - 1);\n  } // const urlParams = urlParts[7];\n  // const hash = urlParts[8];\n\n\n  return \"\".concat(protocol, \"//\").concat(host).concat(path);\n};\nexport var getV2BasePath = function getV2BasePath(config) {\n  if (config.basepath) {\n    return config.basepath;\n  }\n\n  var tsHost = getThoughtSpotHost(config); // This is to handle when e2e's. Search is run on pods for comp-blink-test-pipeline\n  // with baseUrl=https://localhost:8443.\n  // This is to handle when the developer is developing in their local environment.\n\n  if (tsHost.includes('://localhost') && !tsHost.includes(':8443')) {\n    return '';\n  }\n\n  return 'v2';\n};\n/**\n * It is a good idea to keep URLs under 2000 chars.\n * If this is ever breached, since we pass view configuration through\n * URL params, we would like to log a warning.\n * Reference: https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\n */\n\nexport var URL_MAX_LENGTH = 2000;\n/**\n * The default CSS dimensions of the embedded app\n */\n\nexport var DEFAULT_EMBED_WIDTH = '100%';\nexport var DEFAULT_EMBED_HEIGHT = '100%';","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AAGA;;;;;;;;;AASA,IAAMC,QAAQ,GAAG,IAAIC,MAAJ,CACb,CACI,iBADJ,EAEI,4BAFJ,EAGI,gBAHJ,EAII,aAJJ,EAKI,SALJ,CAKe;AALf,EAMEC,IANF,CAMO,EANP,CADa,CAAjB;AAUA;;;;;;AAKA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAgC;EAC9D,IAAMC,QAAQ,GAAGD,MAAM,CAACE,eAAP,CAAuBC,KAAvB,CAA6BP,QAA7B,CAAjB;;EACA,IAAI,CAACK,QAAL,EAAe;IACX,MAAM,IAAIG,KAAJ,CAAUT,aAAa,CAACU,wBAAxB,CAAN;EACH;;EAED,IAAMC,QAAQ,GAAGL,QAAQ,CAAC,CAAD,CAAR,IAAeM,MAAM,CAACC,QAAP,CAAgBF,QAAhD;EACA,IAAMG,IAAI,GAAGR,QAAQ,CAAC,CAAD,CAArB;EACA,IAAIS,IAAI,GAAGT,QAAQ,CAAC,CAAD,CAAnB,CAR8D,CAS9D;;EACA,IAAIS,IAAI,CAACC,MAAL,CAAYD,IAAI,CAACE,MAAL,GAAc,CAA1B,MAAiC,GAArC,EAA0C;IACtCF,IAAI,GAAGA,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACE,MAAL,GAAc,CAAhC,CAAP;EACH,CAZ6D,CAa9D;EACA;;;EAEA,iBAAUN,QAAV,eAAuBG,IAAvB,SAA8BC,IAA9B;AACH,CAjBM;AAmBP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACd,MAAD,EAAgC;EACzD,IAAIA,MAAM,CAACe,QAAX,EAAqB;IACjB,OAAOf,MAAM,CAACe,QAAd;EACH;;EAED,IAAMC,MAAM,GAAGjB,kBAAkB,CAACC,MAAD,CAAjC,CALyD,CAOzD;EACA;EACA;;EACA,IAAIgB,MAAM,CAACC,QAAP,CAAgB,cAAhB,KAAmC,CAACD,MAAM,CAACC,QAAP,CAAgB,OAAhB,CAAxC,EAAkE;IAC9D,OAAO,EAAP;EACH;;EAED,OAAO,IAAP;AACH,CAfM;AAiBP;;;;;;;AAMA,OAAO,IAAMC,cAAc,GAAG,IAAvB;AAEP;;;;AAGA,OAAO,IAAMC,mBAAmB,GAAG,MAA5B;AACP,OAAO,IAAMC,oBAAoB,GAAG,MAA7B","names":["ERROR_MESSAGE","urlRegex","RegExp","join","getThoughtSpotHost","config","urlParts","thoughtSpotHost","match","Error","INVALID_THOUGHTSPOT_HOST","protocol","window","location","host","path","charAt","length","substring","getV2BasePath","basepath","tsHost","includes","URL_MAX_LENGTH","DEFAULT_EMBED_WIDTH","DEFAULT_EMBED_HEIGHT"],"sourceRoot":"","sources":["../../src/config.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}