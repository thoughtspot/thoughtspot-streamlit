{"ast":null,"code":"import _objectSpread from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _hostUrlToFeatureUrl;\n\n/* eslint-disable import/no-mutable-exports */\n\n/**\n * Copyright (c) 2022\n *\n * Base classes\n *\n * @summary Base classes\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\nimport EventEmitter from 'eventemitter3';\nimport uniq from 'lodash/uniq';\nimport { getThoughtSpotHost } from '../config';\nimport { AuthType, PrefetchFeatures } from '../types';\nimport { authenticate, logout as _logout, AuthFailureType, AuthStatus } from '../auth';\nimport { uploadMixpanelEvent, MIXPANEL_EVENT } from '../mixpanel-service';\nvar config = {};\nvar CONFIG_DEFAULTS = {\n  loginFailedMessage: 'Not logged in',\n  authTriggerText: 'Authorize',\n  authType: AuthType.None\n};\nexport var authPromise;\nexport var getEmbedConfig = function getEmbedConfig() {\n  return config;\n};\nexport var getAuthPromise = function getAuthPromise() {\n  return authPromise;\n};\nvar authEE;\nexport function notifyAuthSDKSuccess() {\n  if (!authEE) {\n    console.error('SDK not initialized');\n    return;\n  }\n\n  authEE.emit(AuthStatus.SDK_SUCCESS);\n}\nexport function notifyAuthSuccess() {\n  if (!authEE) {\n    console.error('SDK not initialized');\n    return;\n  }\n\n  authEE.emit(AuthStatus.SUCCESS);\n}\nexport function notifyAuthFailure(failureType) {\n  if (!authEE) {\n    console.error('SDK not initialized');\n    return;\n  }\n\n  authEE.emit(AuthStatus.FAILURE, failureType);\n}\nexport function notifyLogout() {\n  if (!authEE) {\n    console.error('SDK not initialized');\n    return;\n  }\n\n  authEE.emit(AuthStatus.LOGOUT);\n}\n/**\n * Perform authentication on the ThoughtSpot app as applicable.\n */\n\nexport var handleAuth = function handleAuth() {\n  authPromise = authenticate(config);\n  authPromise.then(function (isLoggedIn) {\n    if (!isLoggedIn) {\n      notifyAuthFailure(AuthFailureType.SDK);\n    } else {\n      notifyAuthSDKSuccess();\n    }\n  }, function () {\n    notifyAuthFailure(AuthFailureType.SDK);\n  });\n  return authPromise;\n};\nvar hostUrlToFeatureUrl = (_hostUrlToFeatureUrl = {}, _defineProperty(_hostUrlToFeatureUrl, PrefetchFeatures.SearchEmbed, function (url) {\n  return \"\".concat(url, \"v2/#/embed/answer\");\n}), _defineProperty(_hostUrlToFeatureUrl, PrefetchFeatures.LiveboardEmbed, function (url) {\n  return url;\n}), _defineProperty(_hostUrlToFeatureUrl, PrefetchFeatures.FullApp, function (url) {\n  return url;\n}), _defineProperty(_hostUrlToFeatureUrl, PrefetchFeatures.VizEmbed, function (url) {\n  return url;\n}), _hostUrlToFeatureUrl);\n/**\n * Prefetches static resources from the specified URL. Web browsers can then cache the prefetched resources and serve them from the user's local disk to provide faster access to your app.\n * @param url The URL provided for prefetch\n * @param prefetchFeatures Specify features which needs to be prefetched.\n * @version SDK: 1.4.0 | ThoughtSpot: ts7.sep.cl, 7.2.1\n */\n\nexport var prefetch = function prefetch(url, prefetchFeatures) {\n  if (url === '') {\n    // eslint-disable-next-line no-console\n    console.warn('The prefetch method does not have a valid URL');\n  } else {\n    var features = prefetchFeatures || [PrefetchFeatures.FullApp];\n    var hostUrl = url || config.thoughtSpotHost;\n    hostUrl = hostUrl[hostUrl.length - 1] === '/' ? hostUrl : \"\".concat(hostUrl, \"/\");\n    uniq(features.map(function (feature) {\n      return hostUrlToFeatureUrl[feature](hostUrl);\n    })).forEach(function (prefetchUrl, index) {\n      var iFrame = document.createElement('iframe');\n      iFrame.src = prefetchUrl;\n      iFrame.style.width = '0';\n      iFrame.style.height = '0';\n      iFrame.style.border = '0';\n      iFrame.classList.add('prefetchIframe');\n      iFrame.classList.add(\"prefetchIframeNum-\".concat(index));\n      document.body.appendChild(iFrame);\n    });\n  }\n};\n\nfunction sanity(embedConfig) {\n  if (embedConfig.thoughtSpotHost === undefined) {\n    throw new Error('ThoughtSpot host not provided');\n  }\n\n  if (embedConfig.authType === AuthType.TrustedAuthToken) {\n    if (!embedConfig.username) {\n      throw new Error('Username not provided with Trusted auth');\n    }\n\n    if (!embedConfig.authEndpoint && typeof embedConfig.getAuthToken !== 'function') {\n      throw new Error('Trusted auth should provide either authEndpoint or getAuthToken');\n    }\n  }\n\n  if (embedConfig.noRedirect && !embedConfig.authTriggerContainer) {\n    throw new Error('authTriggerContainer not provided with noRedirect');\n  }\n}\n/**\n * Initializes the Visual Embed SDK globally and perform\n * authentication if applicable.\n * @param embedConfig The configuration object containing ThoughtSpot host,\n * authentication mechanism and so on.\n * example: authStatus = init(config);\n * authStatus.on(AuthStatus.FAILURE, (reason) => { // do something here });\n * @returns event emitter which emits events on authentication success, failure and logout. See {@link AuthStatus}\n * @version SDK: 1.0.0 | ThoughtSpot ts7.april.cl, 7.2.1\n */\n\n\nexport var init = function init(embedConfig) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  sanity(embedConfig);\n  config = _objectSpread(_objectSpread(_objectSpread({}, CONFIG_DEFAULTS), embedConfig), {}, {\n    thoughtSpotHost: getThoughtSpotHost(embedConfig)\n  });\n  authEE = new EventEmitter();\n  handleAuth();\n  uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_CALLED_INIT, {\n    authType: config.authType,\n    host: config.thoughtSpotHost,\n    usedCustomizationSheet: ((_b = (_a = embedConfig.customizations) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.customCSSUrl) != null,\n    usedCustomizationVariables: ((_e = (_d = (_c = embedConfig.customizations) === null || _c === void 0 ? void 0 : _c.style) === null || _d === void 0 ? void 0 : _d.customCSS) === null || _e === void 0 ? void 0 : _e.variables) != null,\n    usedCustomizationRules: ((_h = (_g = (_f = embedConfig.customizations) === null || _f === void 0 ? void 0 : _f.style) === null || _g === void 0 ? void 0 : _g.customCSS) === null || _h === void 0 ? void 0 : _h.rules_UNSTABLE) != null\n  });\n\n  if (config.callPrefetch) {\n    prefetch(config.thoughtSpotHost);\n  }\n\n  return authEE;\n};\nexport function disableAutoLogin() {\n  config.autoLogin = false;\n}\n/**\n * Logs out from ThoughtSpot. This also sets the autoLogin flag to false, to prevent\n * the SDK from automatically logging in again.\n *\n * You can call the `init` method again to re login, if autoLogin is set to true in this\n * second call it will be honored.\n *\n * @param doNotDisableAutoLogin This flag when passed will not disable autoLogin\n * @returns Promise which resolves when logout completes.\n * @version SDK: 1.10.1 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n */\n\nexport var logout = function logout() {\n  var doNotDisableAutoLogin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (!doNotDisableAutoLogin) {\n    disableAutoLogin();\n  }\n\n  return _logout(config).then(function (isLoggedIn) {\n    notifyLogout();\n    return isLoggedIn;\n  });\n};\nvar renderQueue = Promise.resolve();\n/**\n * Renders functions in a queue, resolves to next function only after the callback next is called\n * @param fn The function being registered\n */\n\nexport var renderInQueue = function renderInQueue(fn) {\n  var _config = config,\n      _config$queueMultiRen = _config.queueMultiRenders,\n      queueMultiRenders = _config$queueMultiRen === void 0 ? false : _config$queueMultiRen;\n\n  if (queueMultiRenders) {\n    renderQueue = renderQueue.then(function () {\n      return new Promise(function (res) {\n        return fn(res);\n      });\n    });\n    return renderQueue;\n  } // Sending an empty function to keep it consistent with the above usage.\n\n\n  return fn(function () {}); // eslint-disable-line @typescript-eslint/no-empty-function\n}; // For testing purposes only\n\nexport function reset() {\n  config = {};\n  authEE = null;\n  authPromise = null;\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","uniq","getThoughtSpotHost","AuthType","PrefetchFeatures","authenticate","logout","_logout","AuthFailureType","AuthStatus","uploadMixpanelEvent","MIXPANEL_EVENT","config","CONFIG_DEFAULTS","loginFailedMessage","authTriggerText","authType","None","authPromise","getEmbedConfig","getAuthPromise","authEE","notifyAuthSDKSuccess","console","error","emit","SDK_SUCCESS","notifyAuthSuccess","SUCCESS","notifyAuthFailure","failureType","FAILURE","notifyLogout","LOGOUT","handleAuth","then","isLoggedIn","SDK","hostUrlToFeatureUrl","SearchEmbed","url","LiveboardEmbed","FullApp","VizEmbed","prefetch","prefetchFeatures","warn","features","hostUrl","thoughtSpotHost","length","map","feature","forEach","prefetchUrl","index","iFrame","document","createElement","src","style","width","height","border","classList","add","body","appendChild","sanity","embedConfig","undefined","Error","TrustedAuthToken","username","authEndpoint","getAuthToken","noRedirect","authTriggerContainer","init","VISUAL_SDK_CALLED_INIT","host","usedCustomizationSheet","customizations","_a","_b","customCSSUrl","usedCustomizationVariables","_c","_d","customCSS","_e","variables","usedCustomizationRules","_f","_g","_h","rules_UNSTABLE","callPrefetch","disableAutoLogin","autoLogin","doNotDisableAutoLogin","renderQueue","Promise","resolve","renderInQueue","fn","queueMultiRenders","res","reset"],"sourceRoot":"","sources":["../../../src/embed/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}