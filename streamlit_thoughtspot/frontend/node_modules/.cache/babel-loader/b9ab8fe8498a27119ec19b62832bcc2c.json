{"ast":null,"code":"import _classCallCheck from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\n\nexport var GetBuilderCtor = /*#__PURE__*/function (_Visitor) {\n  _inherits(GetBuilderCtor, _Visitor);\n\n  var _super = _createSuper(GetBuilderCtor);\n\n  function GetBuilderCtor() {\n    _classCallCheck(this, GetBuilderCtor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GetBuilderCtor, [{\n    key: \"visitNull\",\n    value: function visitNull() {\n      return NullBuilder;\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool() {\n      return BoolBuilder;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt() {\n      return IntBuilder;\n    }\n  }, {\n    key: \"visitInt8\",\n    value: function visitInt8() {\n      return Int8Builder;\n    }\n  }, {\n    key: \"visitInt16\",\n    value: function visitInt16() {\n      return Int16Builder;\n    }\n  }, {\n    key: \"visitInt32\",\n    value: function visitInt32() {\n      return Int32Builder;\n    }\n  }, {\n    key: \"visitInt64\",\n    value: function visitInt64() {\n      return Int64Builder;\n    }\n  }, {\n    key: \"visitUint8\",\n    value: function visitUint8() {\n      return Uint8Builder;\n    }\n  }, {\n    key: \"visitUint16\",\n    value: function visitUint16() {\n      return Uint16Builder;\n    }\n  }, {\n    key: \"visitUint32\",\n    value: function visitUint32() {\n      return Uint32Builder;\n    }\n  }, {\n    key: \"visitUint64\",\n    value: function visitUint64() {\n      return Uint64Builder;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat() {\n      return FloatBuilder;\n    }\n  }, {\n    key: \"visitFloat16\",\n    value: function visitFloat16() {\n      return Float16Builder;\n    }\n  }, {\n    key: \"visitFloat32\",\n    value: function visitFloat32() {\n      return Float32Builder;\n    }\n  }, {\n    key: \"visitFloat64\",\n    value: function visitFloat64() {\n      return Float64Builder;\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8() {\n      return Utf8Builder;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary() {\n      return BinaryBuilder;\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary() {\n      return FixedSizeBinaryBuilder;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate() {\n      return DateBuilder;\n    }\n  }, {\n    key: \"visitDateDay\",\n    value: function visitDateDay() {\n      return DateDayBuilder;\n    }\n  }, {\n    key: \"visitDateMillisecond\",\n    value: function visitDateMillisecond() {\n      return DateMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp() {\n      return TimestampBuilder;\n    }\n  }, {\n    key: \"visitTimestampSecond\",\n    value: function visitTimestampSecond() {\n      return TimestampSecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampMillisecond\",\n    value: function visitTimestampMillisecond() {\n      return TimestampMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampMicrosecond\",\n    value: function visitTimestampMicrosecond() {\n      return TimestampMicrosecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampNanosecond\",\n    value: function visitTimestampNanosecond() {\n      return TimestampNanosecondBuilder;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime() {\n      return TimeBuilder;\n    }\n  }, {\n    key: \"visitTimeSecond\",\n    value: function visitTimeSecond() {\n      return TimeSecondBuilder;\n    }\n  }, {\n    key: \"visitTimeMillisecond\",\n    value: function visitTimeMillisecond() {\n      return TimeMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimeMicrosecond\",\n    value: function visitTimeMicrosecond() {\n      return TimeMicrosecondBuilder;\n    }\n  }, {\n    key: \"visitTimeNanosecond\",\n    value: function visitTimeNanosecond() {\n      return TimeNanosecondBuilder;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal() {\n      return DecimalBuilder;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList() {\n      return ListBuilder;\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct() {\n      return StructBuilder;\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion() {\n      return UnionBuilder;\n    }\n  }, {\n    key: \"visitDenseUnion\",\n    value: function visitDenseUnion() {\n      return DenseUnionBuilder;\n    }\n  }, {\n    key: \"visitSparseUnion\",\n    value: function visitSparseUnion() {\n      return SparseUnionBuilder;\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary() {\n      return DictionaryBuilder;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval() {\n      return IntervalBuilder;\n    }\n  }, {\n    key: \"visitIntervalDayTime\",\n    value: function visitIntervalDayTime() {\n      return IntervalDayTimeBuilder;\n    }\n  }, {\n    key: \"visitIntervalYearMonth\",\n    value: function visitIntervalYearMonth() {\n      return IntervalYearMonthBuilder;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList() {\n      return FixedSizeListBuilder;\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap() {\n      return MapBuilder;\n    }\n  }]);\n\n  return GetBuilderCtor;\n}(Visitor);\n/** @ignore */\n\nexport var instance = new GetBuilderCtor();","map":{"version":3,"mappings":"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","names":["Visitor","BinaryBuilder","BoolBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FixedSizeListBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","ListBuilder","MapBuilder","NullBuilder","StructBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","UnionBuilder","DenseUnionBuilder","SparseUnionBuilder","Utf8Builder","GetBuilderCtor","instance"],"sources":["visitor/builderctor.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n"]},"metadata":{},"sourceType":"module"}