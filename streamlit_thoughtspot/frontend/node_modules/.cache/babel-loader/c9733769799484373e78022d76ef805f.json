{"ast":null,"code":"import { disableAutoLogin, getEmbedConfig, handleAuth, notifyAuthFailure, notifyAuthSuccess, notifyLogout } from '../embed/base';\nimport { AuthFailureType, initSession } from '../auth';\nimport { AuthType, EmbedEvent, OperationType } from '../types';\nimport { getAnswerServiceInstance } from './answerService';\nexport function processCustomAction(e, thoughtSpotHost) {\n  var _a;\n\n  if ([OperationType.GetChartWithData, OperationType.GetTableWithHeadlineData].includes((_a = e.data) === null || _a === void 0 ? void 0 : _a.operation)) {\n    const {\n      session,\n      query,\n      operation\n    } = e.data;\n    const answerService = getAnswerServiceInstance(session, query, operation, thoughtSpotHost);\n    return { ...e,\n      answerService\n    };\n  }\n\n  return e;\n}\n\nfunction processAuthInit(e) {\n  var _a, _b; // Store user session details sent by app.\n\n\n  initSession(e.data);\n  notifyAuthSuccess(); // Expose only allowed details (eg: userGUID) back to SDK users.\n\n  return { ...e,\n    data: {\n      userGUID: ((_a = e.data) === null || _a === void 0 ? void 0 : _a.userGUID) || ((_b = e.payload) === null || _b === void 0 ? void 0 : _b.userGUID)\n    }\n  };\n}\n\nfunction processAuthExpire(e) {\n  const {\n    autoLogin = false\n  } = getEmbedConfig(); // Set default to false\n\n  if (autoLogin) {\n    handleAuth();\n  }\n\n  notifyAuthFailure(AuthFailureType.EXPIRY);\n  return e;\n}\n\nfunction processNoCookieAccess(e, containerEl) {\n  const {\n    loginFailedMessage,\n    suppressNoCookieAccessAlert\n  } = getEmbedConfig();\n\n  if (!suppressNoCookieAccessAlert) {\n    // eslint-disable-next-line no-alert\n    alert('Third party cookie access is blocked on this browser, please allow third party cookies for this to work properly. \\nYou can use `suppressNoCookieAccessAlert` to suppress this message.');\n  } // eslint-disable-next-line no-param-reassign\n\n\n  containerEl.innerHTML = loginFailedMessage;\n  notifyAuthFailure(AuthFailureType.NO_COOKIE_ACCESS);\n  return e;\n}\n\nfunction processAuthFailure(e, containerEl) {\n  const {\n    loginFailedMessage,\n    authType\n  } = getEmbedConfig();\n\n  if (authType !== AuthType.None) {\n    // eslint-disable-next-line no-param-reassign\n    containerEl.innerHTML = loginFailedMessage;\n    notifyAuthFailure(AuthFailureType.OTHER);\n  }\n\n  return e;\n}\n\nfunction processAuthLogout(e, containerEl) {\n  const {\n    loginFailedMessage\n  } = getEmbedConfig(); // eslint-disable-next-line no-param-reassign\n\n  containerEl.innerHTML = loginFailedMessage;\n  disableAutoLogin();\n  notifyLogout();\n  return e;\n}\n\nexport function processEventData(type, e, thoughtSpotHost, containerEl) {\n  switch (type) {\n    case EmbedEvent.CustomAction:\n      return processCustomAction(e, thoughtSpotHost);\n\n    case EmbedEvent.AuthInit:\n      return processAuthInit(e);\n\n    case EmbedEvent.AuthExpire:\n      return processAuthExpire(e);\n\n    case EmbedEvent.NoCookieAccess:\n      return processNoCookieAccess(e, containerEl);\n\n    case EmbedEvent.AuthFailure:\n      return processAuthFailure(e, containerEl);\n\n    case EmbedEvent.AuthLogout:\n      return processAuthLogout(e, containerEl);\n\n    default:\n  }\n\n  return e;\n}","map":{"version":3,"mappings":"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","names":["disableAutoLogin","getEmbedConfig","handleAuth","notifyAuthFailure","notifyAuthSuccess","notifyLogout","AuthFailureType","initSession","AuthType","EmbedEvent","OperationType","getAnswerServiceInstance","processCustomAction","e","thoughtSpotHost","GetChartWithData","GetTableWithHeadlineData","includes","data","_a","operation","session","query","answerService","processAuthInit","userGUID","payload","_b","processAuthExpire","autoLogin","EXPIRY","processNoCookieAccess","containerEl","loginFailedMessage","suppressNoCookieAccessAlert","alert","innerHTML","NO_COOKIE_ACCESS","processAuthFailure","authType","None","OTHER","processAuthLogout","processEventData","type","CustomAction","AuthInit","AuthExpire","NoCookieAccess","AuthFailure","AuthLogout"],"sourceRoot":"","sources":["../../../src/utils/processData.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}