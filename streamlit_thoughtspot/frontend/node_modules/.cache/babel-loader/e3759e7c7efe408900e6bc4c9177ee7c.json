{"ast":null,"code":"import _objectSpread from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Copyright (c) 2023\n *\n * Common utility functions for ThoughtSpot Visual Embed SDK\n *\n * @summary Utils\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\n\n/**\n * Construct a runtime filters query string from the given filters.\n * Refer to the following docs for more details on runtime filter syntax:\n * https://cloud-docs.thoughtspot.com/admin/ts-cloud/apply-runtime-filter.html\n * https://cloud-docs.thoughtspot.com/admin/ts-cloud/runtime-filter-operators.html\n * @param runtimeFilters\n */\nexport var getFilterQuery = function getFilterQuery(runtimeFilters) {\n  if (runtimeFilters && runtimeFilters.length) {\n    var filters = runtimeFilters.map(function (filter, valueIndex) {\n      var index = valueIndex + 1;\n      var filterExpr = [];\n      filterExpr.push(\"col\".concat(index, \"=\").concat(filter.columnName));\n      filterExpr.push(\"op\".concat(index, \"=\").concat(filter.operator));\n      filterExpr.push(filter.values.map(function (value) {\n        return \"val\".concat(index, \"=\").concat(value);\n      }).join('&'));\n      return filterExpr.join('&');\n    });\n    return \"\".concat(filters.join('&'));\n  }\n\n  return null;\n};\n/**\n * Convert a value to a string representation to be sent as a query\n * parameter to the ThoughtSpot app.\n * @param value Any parameter value\n */\n\nvar serializeParam = function serializeParam(value) {\n  // do not serialize primitive types\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    return value;\n  }\n\n  return JSON.stringify(value);\n};\n/**\n * Convert a value to a string:\n * in case of an array, we convert it to CSV.\n * in case of any other type, we directly return the value.\n * @param value\n */\n\n\nvar paramToString = function paramToString(value) {\n  return Array.isArray(value) ? value.join(',') : value;\n};\n/**\n * Return a query param string composed from the given params object\n * @param queryParams\n */\n\n\nexport var getQueryParamString = function getQueryParamString(queryParams) {\n  var shouldSerializeParamValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var qp = [];\n  var params = Object.keys(queryParams);\n  params.forEach(function (key) {\n    var val = queryParams[key];\n\n    if (val !== undefined) {\n      var serializedValue = shouldSerializeParamValues ? serializeParam(val) : paramToString(val);\n      qp.push(\"\".concat(key, \"=\").concat(serializedValue));\n    }\n  });\n\n  if (qp.length) {\n    return qp.join('&');\n  }\n\n  return null;\n};\n/**\n * Get a string representation of a dimension value in CSS\n * If numeric, it is considered in pixels.\n * @param value\n */\n\nexport var getCssDimension = function getCssDimension(value) {\n  if (typeof value === 'number') {\n    return \"\".concat(value, \"px\");\n  }\n\n  return value;\n};\n/**\n * Append a string to a URL's hash fragment\n * @param url A URL\n * @param stringToAppend The string to append to the URL hash\n */\n\nexport var appendToUrlHash = function appendToUrlHash(url, stringToAppend) {\n  var outputUrl = url;\n  var encStringToAppend = encodeURIComponent(stringToAppend);\n\n  if (url.indexOf('#') >= 0) {\n    outputUrl = \"\".concat(outputUrl).concat(encStringToAppend);\n  } else {\n    outputUrl = \"\".concat(outputUrl, \"#\").concat(encStringToAppend);\n  }\n\n  return outputUrl;\n};\nexport function getRedirectUrl(url, stringToAppend) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var targetUrl = path ? new URL(path, window.location.origin).href : url;\n  return appendToUrlHash(targetUrl, stringToAppend);\n}\nexport var getEncodedQueryParamsString = function getEncodedQueryParamsString(queryString) {\n  if (!queryString) {\n    return queryString;\n  }\n\n  return btoa(queryString).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n};\nexport var getOffsetTop = function getOffsetTop(element) {\n  var rect = element.getBoundingClientRect();\n  return rect.top + window.scrollY;\n};\nexport var embedEventStatus = {\n  START: 'start',\n  END: 'end'\n};\nexport var setAttributes = function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (key) {\n    element.setAttribute(key, attributes[key].toString());\n  });\n};\n\nvar isCloudRelease = function isCloudRelease(version) {\n  return version.endsWith('.cl');\n};\n/* For Search Embed: ReleaseVersionInBeta */\n\n\nexport var checkReleaseVersionInBeta = function checkReleaseVersionInBeta(releaseVersion, suppressBetaWarning) {\n  if (releaseVersion !== '' && !isCloudRelease(releaseVersion)) {\n    var splittedReleaseVersion = releaseVersion.split('.');\n    var majorVersion = Number(splittedReleaseVersion[0]);\n    var isBetaVersion = majorVersion < 8;\n    return !suppressBetaWarning && isBetaVersion;\n  }\n\n  return false;\n};\nexport var getCustomisations = function getCustomisations(embedConfig, viewConfig) {\n  var _a, _b, _c, _d;\n\n  var customCssUrlFromEmbedConfig = embedConfig.customCssUrl;\n  var customizationsFromViewConfig = viewConfig.customizations;\n  var customizationsFromEmbedConfig = embedConfig.customizations || embedConfig.customisations;\n  var customizations = {\n    style: _objectSpread(_objectSpread(_objectSpread({}, customizationsFromEmbedConfig === null || customizationsFromEmbedConfig === void 0 ? void 0 : customizationsFromEmbedConfig.style), customizationsFromViewConfig === null || customizationsFromViewConfig === void 0 ? void 0 : customizationsFromViewConfig.style), {}, {\n      customCSS: _objectSpread(_objectSpread({}, (_a = customizationsFromEmbedConfig === null || customizationsFromEmbedConfig === void 0 ? void 0 : customizationsFromEmbedConfig.style) === null || _a === void 0 ? void 0 : _a.customCSS), (_b = customizationsFromViewConfig === null || customizationsFromViewConfig === void 0 ? void 0 : customizationsFromViewConfig.style) === null || _b === void 0 ? void 0 : _b.customCSS),\n      customCSSUrl: ((_c = customizationsFromViewConfig === null || customizationsFromViewConfig === void 0 ? void 0 : customizationsFromViewConfig.style) === null || _c === void 0 ? void 0 : _c.customCSSUrl) || ((_d = customizationsFromEmbedConfig === null || customizationsFromEmbedConfig === void 0 ? void 0 : customizationsFromEmbedConfig.style) === null || _d === void 0 ? void 0 : _d.customCSSUrl) || customCssUrlFromEmbedConfig\n    }),\n    content: _objectSpread(_objectSpread({}, customizationsFromEmbedConfig === null || customizationsFromEmbedConfig === void 0 ? void 0 : customizationsFromEmbedConfig.content), customizationsFromViewConfig === null || customizationsFromViewConfig === void 0 ? void 0 : customizationsFromViewConfig.content)\n  };\n  return customizations;\n};\n/**\n * Gets a reference to the DOM node given\n * a selector.\n * @param domSelector\n */\n\nexport function getDOMNode(domSelector) {\n  return typeof domSelector === 'string' ? document.querySelector(domSelector) : domSelector;\n}","map":{"version":3,"mappings":"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","names":["getFilterQuery","runtimeFilters","length","filters","map","filter","valueIndex","index","filterExpr","push","columnName","operator","values","value","join","serializeParam","JSON","stringify","paramToString","Array","isArray","getQueryParamString","queryParams","shouldSerializeParamValues","qp","params","Object","keys","forEach","key","val","undefined","serializedValue","getCssDimension","appendToUrlHash","url","stringToAppend","outputUrl","encStringToAppend","encodeURIComponent","indexOf","getRedirectUrl","path","targetUrl","URL","window","location","origin","href","getEncodedQueryParamsString","queryString","btoa","replace","getOffsetTop","element","rect","getBoundingClientRect","top","scrollY","embedEventStatus","START","END","setAttributes","attributes","setAttribute","toString","isCloudRelease","version","endsWith","checkReleaseVersionInBeta","releaseVersion","suppressBetaWarning","splittedReleaseVersion","split","majorVersion","Number","isBetaVersion","getCustomisations","embedConfig","viewConfig","customCssUrlFromEmbedConfig","customCssUrl","customizationsFromViewConfig","customizations","customizationsFromEmbedConfig","customisations","style","customCSS","_a","_b","customCSSUrl","_c","_d","content","getDOMNode","domSelector","document","querySelector"],"sourceRoot":"","sources":["../../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}