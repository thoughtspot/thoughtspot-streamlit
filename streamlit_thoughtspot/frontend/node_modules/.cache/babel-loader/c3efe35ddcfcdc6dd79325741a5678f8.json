{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\n\nexport var org;\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        class Footer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n\n\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Footer= obj\n           * @returns Footer\n           */\n\n\n          static getRootAsFooter(bb, obj) {\n            return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n\n\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n\n            return offset ?\n            /**  */\n            this.bb.readInt16(this.bb_pos + offset) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.Schema= obj\n           * @returns org.apache.arrow.flatbuf.Schema|null\n           */\n\n\n          schema(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n\n\n          dictionaries(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n\n\n          dictionariesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n\n\n          recordBatches(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n\n\n          recordBatchesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n\n\n          static startFooter(builder) {\n            builder.startObject(4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n\n\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset schemaOffset\n           */\n\n\n          static addSchema(builder, schemaOffset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionariesOffset\n           */\n\n\n          static addDictionaries(builder, dictionariesOffset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n\n\n          static startDictionariesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset recordBatchesOffset\n           */\n\n\n          static addRecordBatches(builder, recordBatchesOffset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n\n\n          static startRecordBatchesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n\n\n          static endFooter(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n\n\n          static finishFooterBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n\n          static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n          }\n\n        }\n\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        class Block {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n\n\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * Index to the start of the RecordBlock (note this is past the Message header)\n           *\n           * @returns flatbuffers.Long\n           */\n\n\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * Length of the metadata\n           *\n           * @returns number\n           */\n\n\n          metaDataLength() {\n            return this.bb.readInt32(this.bb_pos + 8);\n          }\n          /**\n           * Length of the data (this is aligned so there can be a gap between this and\n           * the metatdata).\n           *\n           * @returns flatbuffers.Long\n           */\n\n\n          bodyLength() {\n            return this.bb.readInt64(this.bb_pos + 16);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param number metaDataLength\n           * @param flatbuffers.Long bodyLength\n           * @returns flatbuffers.Offset\n           */\n\n\n          static createBlock(builder, offset, metaDataLength, bodyLength) {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n\n        }\n\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"mappings":"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","names":["NS7624605610262437867","org","Footer","constructor","__init","i","bb","bb_pos","getRootAsFooter","obj","readInt32","position","version","offset","__offset","readInt16","apache","arrow","flatbuf","MetadataVersion","V1","schema","Schema","__indirect","dictionaries","index","Block","__vector","dictionariesLength","__vector_len","recordBatches","recordBatchesLength","startFooter","builder","startObject","addVersion","addFieldInt16","addSchema","schemaOffset","addFieldOffset","addDictionaries","dictionariesOffset","startDictionariesVector","numElems","startVector","addRecordBatches","recordBatchesOffset","startRecordBatchesVector","endFooter","endObject","finishFooterBuffer","finish","createFooter","readInt64","metaDataLength","bodyLength","createBlock","prep","writeInt64","pad","writeInt32"],"sources":["fb/File.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}