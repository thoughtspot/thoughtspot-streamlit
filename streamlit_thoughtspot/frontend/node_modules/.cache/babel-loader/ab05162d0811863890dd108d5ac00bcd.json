{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */\n\nconst kParent = Symbol.for('parent');\n/** @ignore */\n\nconst kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\n\nconst kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */\n\nconst kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */\n\nconst kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nclass Row {\n  constructor(parent, numKeys) {\n    this[kParent] = parent;\n    this.size = numKeys;\n  }\n\n  entries() {\n    return this[Symbol.iterator]();\n  }\n\n  has(key) {\n    return this.get(key) !== undefined;\n  }\n\n  get(key) {\n    let val = undefined;\n\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n\n      if (idx !== undefined) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      } else if ((idx = this.getIndex(key)) > -1) {\n        ktoi.set(key, idx);\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      }\n    }\n\n    return val;\n  }\n\n  set(key, val) {\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n\n      if (idx === undefined) {\n        ktoi.set(key, idx = this.getIndex(key));\n      }\n\n      if (idx > -1) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        itov[idx] = this.setValue(idx, val);\n      }\n    }\n\n    return this;\n  }\n\n  clear() {\n    throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`);\n  }\n\n  delete(_) {\n    throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`);\n  }\n\n  *[Symbol.iterator]() {\n    const ki = this.keys();\n    const vi = this.values();\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      yield [k, v];\n    }\n  }\n\n  forEach(callbackfn, thisArg) {\n    const ki = this.keys();\n    const vi = this.values();\n    const callback = thisArg === undefined ? callbackfn : (v, k, m) => callbackfn.call(thisArg, v, k, m);\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      callback(v, k, this);\n    }\n  }\n\n  toArray() {\n    return [...this.values()];\n  }\n\n  toJSON() {\n    const obj = {};\n    this.forEach((val, key) => obj[key] = val);\n    return obj;\n  }\n\n  inspect() {\n    return this.toString();\n  }\n\n  [kCustomInspect]() {\n    return this.toString();\n  }\n\n  toString() {\n    const str = [];\n    this.forEach((val, key) => {\n      key = valueToString(key);\n      val = valueToString(val);\n      str.push(`${key}: ${val}`);\n    });\n    return `{ ${str.join(', ')} }`;\n  }\n\n}\n\nRow[Symbol.toStringTag] = (proto => {\n  Object.defineProperties(proto, {\n    'size': {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: 0\n    },\n    [kParent]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: null\n    },\n    [kRowIndex]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: -1\n    }\n  });\n  return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\n\nexport class MapRow extends Row {\n  constructor(slice) {\n    super(slice, slice.length);\n    return createRowProxy(this);\n  }\n\n  keys() {\n    return this[kParent].getChildAt(0)[Symbol.iterator]();\n  }\n\n  values() {\n    return this[kParent].getChildAt(1)[Symbol.iterator]();\n  }\n\n  getKey(idx) {\n    return this[kParent].getChildAt(0).get(idx);\n  }\n\n  getIndex(key) {\n    return this[kParent].getChildAt(0).indexOf(key);\n  }\n\n  getValue(index) {\n    return this[kParent].getChildAt(1).get(index);\n  }\n\n  setValue(index, value) {\n    this[kParent].getChildAt(1).set(index, value);\n  }\n\n}\nexport class StructRow extends Row {\n  constructor(parent) {\n    super(parent, parent.type.children.length);\n    return defineRowProxyProperties(this);\n  }\n\n  *keys() {\n    for (const field of this[kParent].type.children) {\n      yield field.name;\n    }\n  }\n\n  *values() {\n    for (const field of this[kParent].type.children) {\n      yield this[field.name];\n    }\n  }\n\n  getKey(idx) {\n    return this[kParent].type.children[idx].name;\n  }\n\n  getIndex(key) {\n    return this[kParent].type.children.findIndex(f => f.name === key);\n  }\n\n  getValue(index) {\n    return this[kParent].getChildAt(index).get(this[kRowIndex]);\n  }\n\n  setValue(index, value) {\n    return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n  }\n\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\n\nconst defineRowProxyProperties = (() => {\n  const desc = {\n    enumerable: true,\n    configurable: false,\n    get: null,\n    set: null\n  };\n  return row => {\n    let idx = -1,\n        ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n\n    const getter = key => function () {\n      return this.get(key);\n    };\n\n    const setter = key => function (val) {\n      return this.set(key, val);\n    };\n\n    for (const key of row.keys()) {\n      ktoi.set(key, ++idx);\n      desc.get = getter(key);\n      desc.set = setter(key);\n      row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n      row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n    }\n\n    desc.get = desc.set = null;\n    return row;\n  };\n})();\n/** @ignore */\n\n\nconst createRowProxy = (() => {\n  if (typeof Proxy === 'undefined') {\n    return defineRowProxyProperties;\n  }\n\n  const has = Row.prototype.has;\n  const get = Row.prototype.get;\n  const set = Row.prototype.set;\n  const getKey = Row.prototype.getKey;\n  const RowProxyHandler = {\n    isExtensible() {\n      return false;\n    },\n\n    deleteProperty() {\n      return false;\n    },\n\n    preventExtensions() {\n      return true;\n    },\n\n    ownKeys(row) {\n      return [...row.keys()].map(x => `${x}`);\n    },\n\n    has(row, key) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return true;\n      }\n\n      if (typeof key === 'number' && !row.has(key)) {\n        key = row.getKey(key);\n      }\n\n      return row.has(key);\n    },\n\n    get(row, key, receiver) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return Reflect.get(row, key, receiver);\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return get.call(receiver, key);\n    },\n\n    set(row, key, val, receiver) {\n      switch (key) {\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n          return Reflect.set(row, key, val, receiver);\n\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n          return false;\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n    }\n\n  };\n  return row => new Proxy(row, RowProxyHandler);\n})();","map":{"version":3,"mappings":"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","names":["valueToString","kParent","Symbol","for","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","constructor","parent","numKeys","size","entries","iterator","has","key","get","undefined","val","ktoi","Map","idx","itov","Array","getValue","getIndex","set","setValue","clear","Error","toStringTag","delete","_","ki","keys","vi","values","k","v","i","kr","vr","next","done","value","forEach","callbackfn","thisArg","callback","m","call","toArray","toJSON","obj","inspect","toString","str","push","join","proto","Object","defineProperties","writable","enumerable","configurable","prototype","MapRow","slice","length","createRowProxy","getChildAt","getKey","indexOf","index","StructRow","type","children","defineRowProxyProperties","field","name","findIndex","f","setPrototypeOf","desc","row","getter","setter","hasOwnProperty","defineProperty","Proxy","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","map","x","receiver","Reflect"],"sources":["vector/row.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n"]},"metadata":{},"sourceType":"module"}