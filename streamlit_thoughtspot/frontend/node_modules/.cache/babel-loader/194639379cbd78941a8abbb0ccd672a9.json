{"ast":null,"code":"import _get from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"height\", \"width\"];\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n/**\n * Copyright (c) 2022\n *\n * Base classes\n *\n * @summary Base classes\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\nimport { getEncodedQueryParamsString, getCssDimension, getOffsetTop, embedEventStatus, setAttributes, getCustomisations, getDOMNode } from '../utils';\nimport { getThoughtSpotHost, URL_MAX_LENGTH, DEFAULT_EMBED_WIDTH, DEFAULT_EMBED_HEIGHT, getV2BasePath } from '../config';\nimport { AuthType, EmbedEvent, Action, Param } from '../types';\nimport { uploadMixpanelEvent, MIXPANEL_EVENT } from '../mixpanel-service';\nimport { processEventData } from '../utils/processData';\nimport { processTrigger } from '../utils/processTrigger';\nimport pkgInfo from '../../package.json';\nimport { getAuthPromise, getEmbedConfig, renderInQueue } from './base';\nvar version = pkgInfo.version;\n/**\n * Global prefix for all Thoughtspot postHash Params.\n */\n\nexport var THOUGHTSPOT_PARAM_PREFIX = 'ts-';\n/**\n * The event id map from v2 event names to v1 event id\n * v1 events are the classic embed events implemented in Blink v1\n * We cannot rename v1 event types to maintain backward compatibility\n * @internal\n */\n\nvar V1EventMap = _defineProperty({}, EmbedEvent.Data, [EmbedEvent.V1Data]);\n/**\n * Base class for embedding v2 experience\n * Note: the v2 version of ThoughtSpot Blink is built on the new stack:\n * React+GraphQL\n */\n\n\nexport var TsEmbed = /*#__PURE__*/function () {\n  function TsEmbed(domSelector, viewConfig) {\n    var _this = this;\n\n    _classCallCheck(this, TsEmbed);\n\n    /**\n     * Should we encode URL Query Params using base64 encoding which thoughtspot\n     * will generate for embedding. This provides additional security to\n     * thoughtspot clusters against Cross site scripting attacks.\n     * @default false\n     */\n    this.shouldEncodeUrlQueryParams = false;\n    this.defaultHiddenActions = [Action.ReportError];\n    /**\n     * Send Custom style as part of payload of APP_INIT\n     */\n\n    this.appInitCb = function (_, responder) {\n      responder({\n        type: EmbedEvent.APP_INIT,\n        data: {\n          customisations: getCustomisations(_this.embedConfig, _this.viewConfig)\n        }\n      });\n    };\n    /**\n     * Register APP_INIT event and sendback init payload\n     */\n\n\n    this.registerAppInit = function () {\n      _this.on(EmbedEvent.APP_INIT, _this.appInitCb);\n    };\n\n    this.el = getDOMNode(domSelector); // TODO: handle error\n\n    this.embedConfig = getEmbedConfig();\n    this.thoughtSpotHost = getThoughtSpotHost(this.embedConfig);\n    this.thoughtSpotV2Base = getV2BasePath(this.embedConfig);\n    this.eventHandlerMap = new Map();\n    this.isError = false;\n    this.viewConfig = viewConfig;\n    this.shouldEncodeUrlQueryParams = this.embedConfig.shouldEncodeUrlQueryParams;\n    this.registerAppInit();\n  }\n  /**\n   * Throws error encountered during initialization.\n   */\n\n\n  _createClass(TsEmbed, [{\n    key: \"throwInitError\",\n    value: function throwInitError() {\n      this.handleError('You need to init the ThoughtSpot SDK module first');\n    }\n    /**\n     * Handles errors within the SDK\n     * @param error The error message or object\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      this.isError = true;\n      this.executeCallbacks(EmbedEvent.Error, {\n        error: error\n      }); // Log error\n\n      console.error(error);\n    }\n    /**\n     * Extracts the type field from the event payload\n     * @param event The window message event\n     */\n\n  }, {\n    key: \"getEventType\",\n    value: function getEventType(event) {\n      var _a, _b; // eslint-disable-next-line no-underscore-dangle\n\n\n      return ((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) || ((_b = event.data) === null || _b === void 0 ? void 0 : _b.__type);\n    }\n    /**\n     * Extracts the port field from the event payload\n     * @param event  The window message event\n     * @returns\n     */\n\n  }, {\n    key: \"getEventPort\",\n    value: function getEventPort(event) {\n      if (event.ports.length && event.ports[0]) {\n        return event.ports[0];\n      }\n\n      return null;\n    }\n    /**\n     * fix for ts7.sep.cl\n     * will be removed for ts7.oct.cl\n     * @hidden\n     */\n\n  }, {\n    key: \"formatEventData\",\n    value: function formatEventData(event, eventType) {\n      var eventData = _objectSpread(_objectSpread({}, event.data), {}, {\n        type: eventType\n      });\n\n      if (!eventData.data) {\n        eventData.data = event.data.payload;\n      }\n\n      return eventData;\n    }\n    /**\n     * Adds a global event listener to window for \"message\" events.\n     * ThoughtSpot detects if a particular event is targeted to this\n     * embed instance through an identifier contained in the payload,\n     * and executes the registered callbacks accordingly.\n     */\n\n  }, {\n    key: \"subscribeToEvents\",\n    value: function subscribeToEvents() {\n      var _this2 = this;\n\n      window.addEventListener('message', function (event) {\n        var eventType = _this2.getEventType(event);\n\n        var eventPort = _this2.getEventPort(event);\n\n        var eventData = _this2.formatEventData(event, eventType);\n\n        if (event.source === _this2.iFrame.contentWindow) {\n          _this2.executeCallbacks(eventType, processEventData(eventType, eventData, _this2.thoughtSpotHost, _this2.el), eventPort);\n        }\n      });\n    }\n    /**\n     * Constructs the base URL string to load the ThoughtSpot app.\n     */\n\n  }, {\n    key: \"getEmbedBasePath\",\n    value: function getEmbedBasePath(query) {\n      var queryString = query;\n\n      if (this.shouldEncodeUrlQueryParams) {\n        queryString = \"?base64UrlEncodedFlags=\".concat(getEncodedQueryParamsString(queryString.substr(1)));\n      }\n\n      var basePath = [this.thoughtSpotHost, this.thoughtSpotV2Base, queryString].filter(function (x) {\n        return x.length > 0;\n      }).join('/');\n      return \"\".concat(basePath, \"#/embed\");\n    }\n    /**\n     * Common query params set for all the embed modes.\n     * @returns queryParams\n     */\n\n  }, {\n    key: \"getBaseQueryParams\",\n    value: function getBaseQueryParams() {\n      var _a, _b;\n\n      var queryParams = {};\n      var hostAppUrl = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.host) || ''; // The below check is needed because TS Cloud firewall, blocks localhost/127.0.0.1\n      // in any url param.\n\n      if (hostAppUrl.includes('localhost') || hostAppUrl.includes('127.0.0.1')) {\n        hostAppUrl = 'local-host';\n      }\n\n      queryParams[Param.HostAppUrl] = encodeURIComponent(hostAppUrl);\n      queryParams[Param.ViewPortHeight] = window.innerHeight;\n      queryParams[Param.ViewPortWidth] = window.innerWidth;\n      queryParams[Param.Version] = version;\n      queryParams[Param.AuthType] = this.embedConfig.authType;\n\n      if (this.embedConfig.disableLoginRedirect === true || this.embedConfig.autoLogin === true) {\n        queryParams[Param.DisableLoginRedirect] = true;\n      }\n\n      if (this.embedConfig.authType === AuthType.EmbeddedSSO) {\n        queryParams[Param.ForceSAMLAutoRedirect] = true;\n      }\n\n      var _this$viewConfig = this.viewConfig,\n          disabledActions = _this$viewConfig.disabledActions,\n          disabledActionReason = _this$viewConfig.disabledActionReason,\n          hiddenActions = _this$viewConfig.hiddenActions,\n          visibleActions = _this$viewConfig.visibleActions,\n          showAlerts = _this$viewConfig.showAlerts,\n          additionalFlags = _this$viewConfig.additionalFlags,\n          locale = _this$viewConfig.locale,\n          customizations = _this$viewConfig.customizations;\n\n      if (Array.isArray(visibleActions) && Array.isArray(hiddenActions)) {\n        this.handleError('You cannot have both hidden actions and visible actions');\n        return queryParams;\n      } // TODO remove embedConfig.customCssUrl\n\n\n      var cssUrlParam = ((_b = customizations === null || customizations === void 0 ? void 0 : customizations.style) === null || _b === void 0 ? void 0 : _b.customCSSUrl) || this.embedConfig.customCssUrl;\n\n      if (cssUrlParam) {\n        queryParams[Param.CustomCSSUrl] = cssUrlParam;\n      }\n\n      if (disabledActions === null || disabledActions === void 0 ? void 0 : disabledActions.length) {\n        queryParams[Param.DisableActions] = disabledActions;\n      }\n\n      if (disabledActionReason) {\n        queryParams[Param.DisableActionReason] = disabledActionReason;\n      }\n\n      queryParams[Param.HideActions] = [].concat(_toConsumableArray(this.defaultHiddenActions), _toConsumableArray(hiddenActions !== null && hiddenActions !== void 0 ? hiddenActions : []));\n\n      if (Array.isArray(visibleActions)) {\n        queryParams[Param.VisibleActions] = visibleActions;\n      }\n\n      if (showAlerts !== undefined) {\n        queryParams[Param.ShowAlerts] = showAlerts;\n      }\n\n      if (locale !== undefined) {\n        queryParams[Param.Locale] = locale;\n      }\n\n      if (additionalFlags && additionalFlags.constructor.name === 'Object') {\n        Object.assign(queryParams, additionalFlags);\n      }\n\n      return queryParams;\n    }\n    /**\n     * Constructs the base URL string to load v1 of the ThoughtSpot app.\n     * This is used for embedding Liveboards, visualizations, and full application.\n     * @param queryString The query string to append to the URL.\n     * @param isAppEmbed A Boolean parameter to specify if you are embedding\n     * the full application.\n     */\n\n  }, {\n    key: \"getV1EmbedBasePath\",\n    value: function getV1EmbedBasePath(queryString) {\n      var showPrimaryNavbar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var disableProfileAndHelp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isAppEmbed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var enableSearchAssist = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var queryStringFrag = queryString ? \"&\".concat(queryString) : '';\n      var primaryNavParam = \"&primaryNavHidden=\".concat(!showPrimaryNavbar);\n      var disableProfileAndHelpParam = \"&profileAndHelpInNavBarHidden=\".concat(disableProfileAndHelp);\n      var enableSearchAssistParam = \"&\".concat(Param.EnableSearchAssist, \"=\").concat(enableSearchAssist);\n      var queryParams = \"?embedApp=true\".concat(isAppEmbed ? primaryNavParam : '').concat(isAppEmbed ? disableProfileAndHelpParam : '').concat(enableSearchAssist ? enableSearchAssistParam : '').concat(queryStringFrag);\n\n      if (this.shouldEncodeUrlQueryParams) {\n        queryParams = \"?base64UrlEncodedFlags=\".concat(getEncodedQueryParamsString(queryParams.substr(1)));\n      }\n\n      var path = \"\".concat(this.thoughtSpotHost, \"/\").concat(queryParams, \"#\");\n\n      if (!isAppEmbed) {\n        path = \"\".concat(path, \"/embed\");\n      }\n\n      return path;\n    }\n    /**\n     * Renders the embedded ThoughtSpot app in an iframe and sets up\n     * event listeners.\n     * @param url\n     * @param frameOptions\n     */\n\n  }, {\n    key: \"renderIFrame\",\n    value: function () {\n      var _renderIFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {\n        var _this3 = this;\n\n        var frameOptions,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                frameOptions = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n                if (!this.isError) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 3:\n                if (!this.thoughtSpotHost) {\n                  this.throwInitError();\n                }\n\n                if (url.length > URL_MAX_LENGTH) {// warn: The URL is too long\n                }\n\n                return _context.abrupt(\"return\", renderInQueue(function (nextInQueue) {\n                  var _a;\n\n                  var initTimestamp = Date.now();\n\n                  _this3.executeCallbacks(EmbedEvent.Init, {\n                    data: {\n                      timestamp: initTimestamp\n                    },\n                    type: EmbedEvent.Init\n                  });\n\n                  uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_START);\n                  return (_a = getAuthPromise()) === null || _a === void 0 ? void 0 : _a.then(function (isLoggedIn) {\n                    if (!isLoggedIn) {\n                      _this3.el.innerHTML = _this3.embedConfig.loginFailedMessage;\n                      return;\n                    }\n\n                    uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_COMPLETE);\n                    _this3.iFrame = _this3.iFrame || document.createElement('iframe');\n                    _this3.iFrame.src = url; // according to screenfull.js documentation\n                    // allowFullscreen, webkitallowfullscreen and mozallowfullscreen must be true\n\n                    _this3.iFrame.allowFullscreen = true; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n\n                    _this3.iFrame.webkitallowfullscreen = true; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n\n                    _this3.iFrame.mozallowfullscreen = true; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n\n                    _this3.iFrame.allow = 'clipboard-read; clipboard-write';\n\n                    var frameHeight = frameOptions.height,\n                        frameWidth = frameOptions.width,\n                        restParams = _objectWithoutProperties(frameOptions, _excluded);\n\n                    var width = getCssDimension(frameWidth || DEFAULT_EMBED_WIDTH);\n                    var height = getCssDimension(frameHeight || DEFAULT_EMBED_HEIGHT);\n                    setAttributes(_this3.iFrame, restParams);\n                    _this3.iFrame.style.width = \"\".concat(width);\n                    _this3.iFrame.style.height = \"\".concat(height);\n                    _this3.iFrame.style.border = '0';\n                    _this3.iFrame.name = 'ThoughtSpot Embedded Analytics';\n\n                    _this3.iFrame.addEventListener('load', function () {\n                      nextInQueue();\n                      var loadTimestamp = Date.now();\n\n                      _this3.executeCallbacks(EmbedEvent.Load, {\n                        data: {\n                          timestamp: loadTimestamp\n                        },\n                        type: EmbedEvent.Load\n                      });\n\n                      uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_IFRAME_LOAD_PERFORMANCE, {\n                        timeTookToLoad: loadTimestamp - initTimestamp\n                      });\n                    });\n\n                    _this3.iFrame.addEventListener('error', function () {\n                      nextInQueue();\n                    });\n\n                    _this3.el.innerHTML = '';\n\n                    _this3.el.appendChild(_this3.iFrame);\n\n                    var prefetchIframe = document.querySelectorAll('.prefetchIframe');\n\n                    if (prefetchIframe.length) {\n                      prefetchIframe.forEach(function (el) {\n                        el.remove();\n                      });\n                    }\n\n                    _this3.subscribeToEvents();\n                  }).catch(function (error) {\n                    nextInQueue();\n                    uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_FAILED);\n                    _this3.el.innerHTML = _this3.embedConfig.loginFailedMessage;\n\n                    _this3.handleError(error);\n                  });\n                }));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderIFrame(_x) {\n        return _renderIFrame.apply(this, arguments);\n      }\n\n      return renderIFrame;\n    }()\n    /**\n     * Sets the height of the iframe\n     * @param height The height in pixels\n     */\n\n  }, {\n    key: \"setIFrameHeight\",\n    value: function setIFrameHeight(height) {\n      this.iFrame.style.height = \"\".concat(height, \"px\");\n    }\n    /**\n     * Executes all registered event handlers for a particular event type\n     * @param eventType The event type\n     * @param data The payload invoked with the event handler\n     * @param eventPort The event Port for a specific MessageChannel\n     */\n\n  }, {\n    key: \"executeCallbacks\",\n    value: function executeCallbacks(eventType, data, eventPort) {\n      var _this4 = this;\n\n      var callbacks = this.eventHandlerMap.get(eventType) || [];\n      var allHandlers = this.eventHandlerMap.get(EmbedEvent.ALL) || [];\n      callbacks.push.apply(callbacks, _toConsumableArray(allHandlers));\n      var dataStatus = (data === null || data === void 0 ? void 0 : data.status) || embedEventStatus.END;\n      callbacks.forEach(function (callbackObj) {\n        if (callbackObj.options.start && dataStatus === embedEventStatus.START || // When start status is true it trigger only start releated payload\n        !callbackObj.options.start && dataStatus === embedEventStatus.END // When start status is false it trigger only end releated payload\n        ) {\n          callbackObj.callback(data, function (payload) {\n            _this4.triggerEventOnPort(eventPort, payload);\n          });\n        }\n      });\n    }\n    /**\n     * Returns the ThoughtSpot hostname or IP address.\n     */\n\n  }, {\n    key: \"getThoughtSpotHost\",\n    value: function getThoughtSpotHost() {\n      return this.thoughtSpotHost;\n    }\n    /**\n     * Gets the v1 event type (if applicable) for the EmbedEvent type\n     * @param eventType The v2 event type\n     * @returns The corresponding v1 event type if one exists\n     * or else the v2 event type itself\n     */\n\n  }, {\n    key: \"getCompatibleEventType\",\n    value: function getCompatibleEventType(eventType) {\n      return V1EventMap[eventType] || eventType;\n    }\n    /**\n     * Calculates the iframe center for the current visible viewPort\n     * of iframe using Scroll position of Host App, offsetTop for iframe\n     * in Host app. ViewPort height of the tab.\n     * @returns iframe Center in visible viewport,\n     *  Iframe height,\n     *  View port height.\n     */\n\n  }, {\n    key: \"getIframeCenter\",\n    value: function getIframeCenter() {\n      var offsetTopClient = getOffsetTop(this.iFrame);\n      var scrollTopClient = window.scrollY;\n      var viewPortHeight = window.innerHeight;\n      var iframeHeight = this.iFrame.offsetHeight;\n      var iframeScrolled = scrollTopClient - offsetTopClient;\n      var iframeVisibleViewPort;\n      var iframeOffset;\n\n      if (iframeScrolled < 0) {\n        iframeVisibleViewPort = viewPortHeight - (offsetTopClient - scrollTopClient);\n        iframeVisibleViewPort = Math.min(iframeHeight, iframeVisibleViewPort);\n        iframeOffset = 0;\n      } else {\n        iframeVisibleViewPort = Math.min(iframeHeight - iframeScrolled, viewPortHeight);\n        iframeOffset = iframeScrolled;\n      }\n\n      var iframeCenter = iframeOffset + iframeVisibleViewPort / 2;\n      return {\n        iframeCenter: iframeCenter,\n        iframeScrolled: iframeScrolled,\n        iframeHeight: iframeHeight,\n        viewPortHeight: viewPortHeight,\n        iframeVisibleViewPort: iframeVisibleViewPort\n      };\n    }\n    /**\n     * Registers an event listener to trigger an alert when the ThoughtSpot app\n     * sends an event of a particular message type to the host application.\n     *\n     * @param messageType The message type\n     * @param callback A callback as a function\n     * @param options The message options\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(messageType, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        start: false\n      };\n\n      if (this.isRendered) {\n        this.handleError('Please register event handlers before calling render');\n      }\n\n      var callbacks = this.eventHandlerMap.get(messageType) || [];\n      callbacks.push({\n        options: options,\n        callback: callback\n      });\n      this.eventHandlerMap.set(messageType, callbacks);\n      return this;\n    }\n    /**\n     * Triggers an event on specific Port registered against\n     * for the EmbedEvent\n     * @param eventType The message type\n     * @param data The payload to send\n     */\n\n  }, {\n    key: \"triggerEventOnPort\",\n    value: function triggerEventOnPort(eventPort, payload) {\n      if (eventPort) {\n        try {\n          eventPort.postMessage({\n            type: payload.type,\n            data: payload.data\n          });\n        } catch (e) {\n          eventPort.postMessage({\n            error: e\n          });\n          console.log(e);\n        }\n      } else {\n        console.log('Event Port is not defined');\n      }\n    }\n    /**\n     * Triggers an event to the embedded app\n     * @param messageType The event type\n     * @param data The payload to send with the message\n     */\n\n  }, {\n    key: \"trigger\",\n    value: function trigger(messageType) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      uploadMixpanelEvent(\"\".concat(MIXPANEL_EVENT.VISUAL_SDK_TRIGGER, \"-\").concat(messageType));\n      return processTrigger(this.iFrame, messageType, this.thoughtSpotHost, data);\n    }\n    /**\n     * Marks the ThoughtSpot object to have been rendered\n     * Needs to be overridden by subclasses to do the actual\n     * rendering of the iframe.\n     * @param args\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.isRendered = true;\n      return this;\n    }\n    /**\n     * Get the Post Url Params for THOUGHTSPOT from the current\n     * host app URL.\n     * THOUGHTSPOT URL params starts with a prefix \"ts-\"\n     * @version SDK: 1.14.0 | ThoughtSpot: 8.4.0.cl, 8.4.1-sw\n     */\n\n  }, {\n    key: \"getThoughtSpotPostUrlParams\",\n    value: function getThoughtSpotPostUrlParams() {\n      var urlHash = window.location.hash;\n      var queryParams = window.location.search;\n      var postHashParams = urlHash.split('?');\n      var postURLParams = postHashParams[postHashParams.length - 1];\n      var queryParamsObj = new URLSearchParams(queryParams);\n      var postURLParamsObj = new URLSearchParams(postURLParams);\n      var params = new URLSearchParams();\n\n      var addKeyValuePairCb = function addKeyValuePairCb(value, key) {\n        if (key.startsWith(THOUGHTSPOT_PARAM_PREFIX)) {\n          params.append(key, value);\n        }\n      };\n\n      queryParamsObj.forEach(addKeyValuePairCb);\n      postURLParamsObj.forEach(addKeyValuePairCb);\n      var tsParams = params.toString();\n      tsParams = tsParams ? \"?\".concat(tsParams) : '';\n      return tsParams;\n    }\n  }]);\n\n  return TsEmbed;\n}();\n/**\n * Base class for embedding v1 experience\n * Note: The v1 version of ThoughtSpot Blink works on the AngularJS stack\n * which is currently under migration to v2\n */\n\nexport var V1Embed = /*#__PURE__*/function (_TsEmbed) {\n  _inherits(V1Embed, _TsEmbed);\n\n  var _super = _createSuper(V1Embed);\n\n  function V1Embed(domSelector, viewConfig) {\n    var _this5;\n\n    _classCallCheck(this, V1Embed);\n\n    _this5 = _super.call(this, domSelector, viewConfig);\n    _this5.viewConfig = viewConfig;\n    return _this5;\n  }\n  /**\n   * Render the app in an iframe and set up event handlers\n   * @param iframeSrc\n   */\n\n\n  _createClass(V1Embed, [{\n    key: \"renderV1Embed\",\n    value: function renderV1Embed(iframeSrc) {\n      return this.renderIFrame(iframeSrc, this.viewConfig.frameParams);\n    } // @override\n\n  }, {\n    key: \"on\",\n    value: function on(messageType, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        start: false\n      };\n      var eventType = this.getCompatibleEventType(messageType);\n      return _get(_getPrototypeOf(V1Embed.prototype), \"on\", this).call(this, eventType, callback, options);\n    }\n  }]);\n\n  return V1Embed;\n}(TsEmbed);","map":{"version":3,"mappings":"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","names":["getEncodedQueryParamsString","getCssDimension","getOffsetTop","embedEventStatus","setAttributes","getCustomisations","getDOMNode","getThoughtSpotHost","URL_MAX_LENGTH","DEFAULT_EMBED_WIDTH","DEFAULT_EMBED_HEIGHT","getV2BasePath","AuthType","EmbedEvent","Action","Param","uploadMixpanelEvent","MIXPANEL_EVENT","processEventData","processTrigger","pkgInfo","getAuthPromise","getEmbedConfig","renderInQueue","version","THOUGHTSPOT_PARAM_PREFIX","V1EventMap","Data","V1Data","TsEmbed","domSelector","viewConfig","ReportError","_","responder","type","APP_INIT","data","customisations","embedConfig","on","appInitCb","el","thoughtSpotHost","thoughtSpotV2Base","eventHandlerMap","Map","isError","shouldEncodeUrlQueryParams","registerAppInit","handleError","error","executeCallbacks","Error","console","event","_a","_b","__type","ports","length","eventType","eventData","payload","window","addEventListener","getEventType","eventPort","getEventPort","formatEventData","source","iFrame","contentWindow","query","queryString","substr","basePath","filter","x","join","queryParams","hostAppUrl","location","host","includes","HostAppUrl","encodeURIComponent","ViewPortHeight","innerHeight","ViewPortWidth","innerWidth","Version","authType","disableLoginRedirect","autoLogin","DisableLoginRedirect","EmbeddedSSO","ForceSAMLAutoRedirect","disabledActions","disabledActionReason","hiddenActions","visibleActions","showAlerts","additionalFlags","locale","customizations","Array","isArray","cssUrlParam","style","customCSSUrl","customCssUrl","CustomCSSUrl","DisableActions","DisableActionReason","HideActions","defaultHiddenActions","VisibleActions","undefined","ShowAlerts","Locale","constructor","name","Object","assign","showPrimaryNavbar","disableProfileAndHelp","isAppEmbed","enableSearchAssist","queryStringFrag","primaryNavParam","disableProfileAndHelpParam","enableSearchAssistParam","EnableSearchAssist","path","url","frameOptions","throwInitError","nextInQueue","initTimestamp","Date","now","Init","timestamp","VISUAL_SDK_RENDER_START","then","isLoggedIn","innerHTML","loginFailedMessage","VISUAL_SDK_RENDER_COMPLETE","document","createElement","src","allowFullscreen","webkitallowfullscreen","mozallowfullscreen","allow","frameHeight","height","frameWidth","width","restParams","border","loadTimestamp","Load","VISUAL_SDK_IFRAME_LOAD_PERFORMANCE","timeTookToLoad","appendChild","prefetchIframe","querySelectorAll","forEach","remove","subscribeToEvents","catch","VISUAL_SDK_RENDER_FAILED","callbacks","get","allHandlers","ALL","push","dataStatus","status","END","callbackObj","options","start","START","callback","triggerEventOnPort","offsetTopClient","scrollTopClient","scrollY","viewPortHeight","iframeHeight","offsetHeight","iframeScrolled","iframeVisibleViewPort","iframeOffset","Math","min","iframeCenter","messageType","isRendered","set","postMessage","e","log","VISUAL_SDK_TRIGGER","urlHash","hash","search","postHashParams","split","postURLParams","queryParamsObj","URLSearchParams","postURLParamsObj","params","addKeyValuePairCb","value","key","startsWith","append","tsParams","toString","V1Embed","iframeSrc","renderIFrame","frameParams","getCompatibleEventType"],"sourceRoot":"","sources":["../../../src/embed/ts-embed.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}