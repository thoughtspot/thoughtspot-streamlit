{"ast":null,"code":"import _get from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot-streamlit/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"height\", \"width\"];\n\n/**\n * Copyright (c) 2022\n *\n * Base classes\n *\n * @summary Base classes\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\nimport { getEncodedQueryParamsString, getCssDimension, getOffsetTop, embedEventStatus, setAttributes, getCustomisations } from '../utils';\nimport { getThoughtSpotHost, URL_MAX_LENGTH, DEFAULT_EMBED_WIDTH, DEFAULT_EMBED_HEIGHT, getV2BasePath } from '../config';\nimport { EmbedEvent, Action, Param } from '../types';\nimport { uploadMixpanelEvent, MIXPANEL_EVENT } from '../mixpanel-service';\nimport { processEventData } from '../utils/processData';\nimport { processTrigger } from '../utils/processTrigger';\nimport pkgInfo from '../../package.json';\nimport { getAuthPromise, getEmbedConfig, renderInQueue } from './base';\nvar version = pkgInfo.version;\n/**\n * Global prefix for all Thoughtspot postHash Params.\n */\n\nexport var THOUGHTSPOT_PARAM_PREFIX = 'ts-';\n/**\n * The event id map from v2 event names to v1 event id\n * v1 events are the classic embed events implemented in Blink v1\n * We cannot rename v1 event types to maintain backward compatibility\n * @internal\n */\n\nvar V1EventMap = _defineProperty({}, EmbedEvent.Data, [EmbedEvent.V1Data]);\n/**\n * Base class for embedding v2 experience\n * Note: the v2 version of ThoughtSpot Blink is built on the new stack:\n * React+GraphQL\n */\n\n\nexport var TsEmbed = /*#__PURE__*/function () {\n  function TsEmbed(domSelector, viewConfig) {\n    var _this = this;\n\n    _classCallCheck(this, TsEmbed);\n\n    /**\n     * Should we encode URL Query Params using base64 encoding which thoughtspot\n     * will generate for embedding. This provides additional security to\n     * thoughtspot clusters against Cross site scripting attacks.\n     * @default false\n     */\n    this.shouldEncodeUrlQueryParams = false;\n    this.defaultHiddenActions = [Action.ReportError];\n    /**\n     * Send Custom style as part of payload of APP_INIT\n     */\n\n    this.appInitCb = function (_, responder) {\n      responder({\n        type: EmbedEvent.APP_INIT,\n        data: {\n          customisations: getCustomisations(_this.embedConfig)\n        }\n      });\n    };\n    /**\n     * Register APP_INIT event and sendback init payload\n     */\n\n\n    this.registerAppInit = function () {\n      _this.on(EmbedEvent.APP_INIT, _this.appInitCb);\n    };\n\n    this.el = this.getDOMNode(domSelector); // TODO: handle error\n\n    this.embedConfig = getEmbedConfig();\n    this.thoughtSpotHost = getThoughtSpotHost(this.embedConfig);\n    this.thoughtSpotV2Base = getV2BasePath(this.embedConfig);\n    this.eventHandlerMap = new Map();\n    this.isError = false;\n    this.viewConfig = viewConfig;\n    this.shouldEncodeUrlQueryParams = this.embedConfig.shouldEncodeUrlQueryParams;\n    this.registerAppInit();\n  }\n  /**\n   * Gets a reference to the root DOM node where\n   * the embedded content will appear.\n   * @param domSelector\n   */\n\n\n  _createClass(TsEmbed, [{\n    key: \"getDOMNode\",\n    value: function getDOMNode(domSelector) {\n      return typeof domSelector === 'string' ? document.querySelector(domSelector) : domSelector;\n    }\n    /**\n     * Throws error encountered during initialization.\n     */\n\n  }, {\n    key: \"throwInitError\",\n    value: function throwInitError() {\n      this.handleError('You need to init the ThoughtSpot SDK module first');\n    }\n    /**\n     * Handles errors within the SDK\n     * @param error The error message or object\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      this.isError = true;\n      this.executeCallbacks(EmbedEvent.Error, {\n        error: error\n      }); // Log error\n\n      console.error(error);\n    }\n    /**\n     * Extracts the type field from the event payload\n     * @param event The window message event\n     */\n\n  }, {\n    key: \"getEventType\",\n    value: function getEventType(event) {\n      var _a, _b; // eslint-disable-next-line no-underscore-dangle\n\n\n      return ((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) || ((_b = event.data) === null || _b === void 0 ? void 0 : _b.__type);\n    }\n    /**\n     * Extracts the port field from the event payload\n     * @param event  The window message event\n     * @returns\n     */\n\n  }, {\n    key: \"getEventPort\",\n    value: function getEventPort(event) {\n      if (event.ports.length && event.ports[0]) {\n        return event.ports[0];\n      }\n\n      return null;\n    }\n    /**\n     * fix for ts7.sep.cl\n     * will be removed for ts7.oct.cl\n     * @hidden\n     */\n\n  }, {\n    key: \"formatEventData\",\n    value: function formatEventData(event, eventType) {\n      var eventData = _objectSpread(_objectSpread({}, event.data), {}, {\n        type: eventType\n      });\n\n      if (!eventData.data) {\n        eventData.data = event.data.payload;\n      }\n\n      return eventData;\n    }\n    /**\n     * Adds a global event listener to window for \"message\" events.\n     * ThoughtSpot detects if a particular event is targeted to this\n     * embed instance through an identifier contained in the payload,\n     * and executes the registered callbacks accordingly.\n     */\n\n  }, {\n    key: \"subscribeToEvents\",\n    value: function subscribeToEvents() {\n      var _this2 = this;\n\n      window.addEventListener('message', function (event) {\n        var eventType = _this2.getEventType(event);\n\n        var eventPort = _this2.getEventPort(event);\n\n        var eventData = _this2.formatEventData(event, eventType);\n\n        if (event.source === _this2.iFrame.contentWindow) {\n          _this2.executeCallbacks(eventType, processEventData(eventType, eventData, _this2.thoughtSpotHost, _this2.el), eventPort);\n        }\n      });\n    }\n    /**\n     * Constructs the base URL string to load the ThoughtSpot app.\n     */\n\n  }, {\n    key: \"getEmbedBasePath\",\n    value: function getEmbedBasePath(query) {\n      var queryString = query;\n\n      if (this.shouldEncodeUrlQueryParams) {\n        queryString = \"?base64UrlEncodedFlags=\".concat(getEncodedQueryParamsString(queryString.substr(1)));\n      }\n\n      var basePath = [this.thoughtSpotHost, this.thoughtSpotV2Base, queryString].filter(function (x) {\n        return x.length > 0;\n      }).join('/');\n      return \"\".concat(basePath, \"#/embed\");\n    }\n    /**\n     * Common query params set for all the embed modes.\n     * @returns queryParams\n     */\n\n  }, {\n    key: \"getBaseQueryParams\",\n    value: function getBaseQueryParams() {\n      var _a;\n\n      var queryParams = {};\n      var hostAppUrl = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.host) || ''; // The below check is needed because TS Cloud firewall, blocks localhost/127.0.0.1\n      // in any url param.\n\n      if (hostAppUrl.includes('localhost') || hostAppUrl.includes('127.0.0.1')) {\n        hostAppUrl = 'local-host';\n      }\n\n      queryParams[Param.HostAppUrl] = encodeURIComponent(hostAppUrl);\n      queryParams[Param.ViewPortHeight] = window.innerHeight;\n      queryParams[Param.ViewPortWidth] = window.innerWidth;\n      queryParams[Param.Version] = version;\n\n      if (this.embedConfig.disableLoginRedirect === true || this.embedConfig.autoLogin === true) {\n        queryParams[Param.DisableLoginRedirect] = true;\n      } // TODO remove this\n\n\n      if (this.embedConfig.customCssUrl) {\n        queryParams[Param.CustomCSSUrl] = this.embedConfig.customCssUrl;\n      }\n\n      var _this$viewConfig = this.viewConfig,\n          disabledActions = _this$viewConfig.disabledActions,\n          disabledActionReason = _this$viewConfig.disabledActionReason,\n          hiddenActions = _this$viewConfig.hiddenActions,\n          visibleActions = _this$viewConfig.visibleActions,\n          showAlerts = _this$viewConfig.showAlerts,\n          additionalFlags = _this$viewConfig.additionalFlags,\n          locale = _this$viewConfig.locale;\n\n      if (Array.isArray(visibleActions) && Array.isArray(hiddenActions)) {\n        this.handleError('You cannot have both hidden actions and visible actions');\n        return queryParams;\n      }\n\n      if (disabledActions === null || disabledActions === void 0 ? void 0 : disabledActions.length) {\n        queryParams[Param.DisableActions] = disabledActions;\n      }\n\n      if (disabledActionReason) {\n        queryParams[Param.DisableActionReason] = disabledActionReason;\n      }\n\n      queryParams[Param.HideActions] = [].concat(_toConsumableArray(this.defaultHiddenActions), _toConsumableArray(hiddenActions !== null && hiddenActions !== void 0 ? hiddenActions : []));\n\n      if (Array.isArray(visibleActions)) {\n        queryParams[Param.VisibleActions] = visibleActions;\n      }\n\n      if (showAlerts !== undefined) {\n        queryParams[Param.ShowAlerts] = showAlerts;\n      }\n\n      if (locale !== undefined) {\n        queryParams[Param.Locale] = locale;\n      }\n\n      if (additionalFlags && additionalFlags.constructor.name === 'Object') {\n        Object.assign(queryParams, additionalFlags);\n      }\n\n      return queryParams;\n    }\n    /**\n     * Constructs the base URL string to load v1 of the ThoughtSpot app.\n     * This is used for embedding Liveboards, visualizations, and full application.\n     * @param queryString The query string to append to the URL.\n     * @param isAppEmbed A Boolean parameter to specify if you are embedding\n     * the full application.\n     */\n\n  }, {\n    key: \"getV1EmbedBasePath\",\n    value: function getV1EmbedBasePath(queryString) {\n      var showPrimaryNavbar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var disableProfileAndHelp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isAppEmbed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var enableSearchAssist = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var queryStringFrag = queryString ? \"&\".concat(queryString) : '';\n      var primaryNavParam = \"&primaryNavHidden=\".concat(!showPrimaryNavbar);\n      var disableProfileAndHelpParam = \"&profileAndHelpInNavBarHidden=\".concat(disableProfileAndHelp);\n      var enableSearchAssistParam = \"&\".concat(Param.EnableSearchAssist, \"=\").concat(enableSearchAssist);\n      var queryParams = \"?embedApp=true\".concat(isAppEmbed ? primaryNavParam : '').concat(isAppEmbed ? disableProfileAndHelpParam : '').concat(enableSearchAssist ? enableSearchAssistParam : '').concat(queryStringFrag);\n\n      if (this.shouldEncodeUrlQueryParams) {\n        queryParams = \"?base64UrlEncodedFlags=\".concat(getEncodedQueryParamsString(queryParams.substr(1)));\n      }\n\n      var path = \"\".concat(this.thoughtSpotHost, \"/\").concat(queryParams, \"#\");\n\n      if (!isAppEmbed) {\n        path = \"\".concat(path, \"/embed\");\n      }\n\n      return path;\n    }\n    /**\n     * Renders the embedded ThoughtSpot app in an iframe and sets up\n     * event listeners.\n     * @param url\n     * @param frameOptions\n     */\n\n  }, {\n    key: \"renderIFrame\",\n    value: function renderIFrame(url) {\n      var _this3 = this;\n\n      var frameOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.isError) {\n        return;\n      }\n\n      if (!this.thoughtSpotHost) {\n        this.throwInitError();\n      }\n\n      if (url.length > URL_MAX_LENGTH) {// warn: The URL is too long\n      }\n\n      renderInQueue(function (nextInQueue) {\n        var _a;\n\n        var initTimestamp = Date.now();\n\n        _this3.executeCallbacks(EmbedEvent.Init, {\n          data: {\n            timestamp: initTimestamp\n          },\n          type: EmbedEvent.Init\n        });\n\n        uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_START);\n        (_a = getAuthPromise()) === null || _a === void 0 ? void 0 : _a.then(function (isLoggedIn) {\n          if (!isLoggedIn) {\n            _this3.el.innerHTML = _this3.embedConfig.loginFailedMessage;\n            return;\n          }\n\n          uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_COMPLETE);\n          _this3.iFrame = _this3.iFrame || document.createElement('iframe');\n          _this3.iFrame.src = url; // according to screenfull.js documentation\n          // allowFullscreen, webkitallowfullscreen and mozallowfullscreen must be true\n\n          _this3.iFrame.allowFullscreen = true; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n\n          _this3.iFrame.webkitallowfullscreen = true; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n\n          _this3.iFrame.mozallowfullscreen = true;\n\n          var frameHeight = frameOptions.height,\n              frameWidth = frameOptions.width,\n              restParams = _objectWithoutProperties(frameOptions, _excluded);\n\n          var width = getCssDimension(frameWidth || DEFAULT_EMBED_WIDTH);\n          var height = getCssDimension(frameHeight || DEFAULT_EMBED_HEIGHT);\n          setAttributes(_this3.iFrame, restParams);\n          _this3.iFrame.style.width = \"\".concat(width);\n          _this3.iFrame.style.height = \"\".concat(height);\n          _this3.iFrame.style.border = '0';\n          _this3.iFrame.name = 'ThoughtSpot Embedded Analytics';\n\n          _this3.iFrame.addEventListener('load', function () {\n            nextInQueue();\n            var loadTimestamp = Date.now();\n\n            _this3.executeCallbacks(EmbedEvent.Load, {\n              data: {\n                timestamp: loadTimestamp\n              },\n              type: EmbedEvent.Load\n            });\n\n            uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_IFRAME_LOAD_PERFORMANCE, {\n              timeTookToLoad: loadTimestamp - initTimestamp\n            });\n          });\n\n          _this3.iFrame.addEventListener('error', function () {\n            nextInQueue();\n          });\n\n          _this3.el.innerHTML = '';\n\n          _this3.el.appendChild(_this3.iFrame);\n\n          var prefetchIframe = document.querySelectorAll('.prefetchIframe');\n\n          if (prefetchIframe.length) {\n            prefetchIframe.forEach(function (el) {\n              el.remove();\n            });\n          }\n\n          _this3.subscribeToEvents();\n        }).catch(function (error) {\n          nextInQueue();\n          uploadMixpanelEvent(MIXPANEL_EVENT.VISUAL_SDK_RENDER_FAILED);\n          _this3.el.innerHTML = _this3.embedConfig.loginFailedMessage;\n\n          _this3.handleError(error);\n        });\n      });\n    }\n    /**\n     * Sets the height of the iframe\n     * @param height The height in pixels\n     */\n\n  }, {\n    key: \"setIFrameHeight\",\n    value: function setIFrameHeight(height) {\n      this.iFrame.style.height = \"\".concat(height, \"px\");\n    }\n    /**\n     * Executes all registered event handlers for a particular event type\n     * @param eventType The event type\n     * @param data The payload invoked with the event handler\n     * @param eventPort The event Port for a specific MessageChannel\n     */\n\n  }, {\n    key: \"executeCallbacks\",\n    value: function executeCallbacks(eventType, data, eventPort) {\n      var _this4 = this;\n\n      var callbacks = this.eventHandlerMap.get(eventType) || [];\n      var allHandlers = this.eventHandlerMap.get(EmbedEvent.ALL) || [];\n      callbacks.push.apply(callbacks, _toConsumableArray(allHandlers));\n      var dataStatus = (data === null || data === void 0 ? void 0 : data.status) || embedEventStatus.END;\n      callbacks.forEach(function (callbackObj) {\n        if (callbackObj.options.start && dataStatus === embedEventStatus.START || // When start status is true it trigger only start releated payload\n        !callbackObj.options.start && dataStatus === embedEventStatus.END // When start status is false it trigger only end releated payload\n        ) {\n          callbackObj.callback(data, function (payload) {\n            _this4.triggerEventOnPort(eventPort, payload);\n          });\n        }\n      });\n    }\n    /**\n     * Returns the ThoughtSpot hostname or IP address.\n     */\n\n  }, {\n    key: \"getThoughtSpotHost\",\n    value: function getThoughtSpotHost() {\n      return this.thoughtSpotHost;\n    }\n    /**\n     * Gets the v1 event type (if applicable) for the EmbedEvent type\n     * @param eventType The v2 event type\n     * @returns The corresponding v1 event type if one exists\n     * or else the v2 event type itself\n     */\n\n  }, {\n    key: \"getCompatibleEventType\",\n    value: function getCompatibleEventType(eventType) {\n      return V1EventMap[eventType] || eventType;\n    }\n    /**\n     * Calculates the iframe center for the current visible viewPort\n     * of iframe using Scroll position of Host App, offsetTop for iframe\n     * in Host app. ViewPort height of the tab.\n     * @returns iframe Center in visible viewport,\n     *  Iframe height,\n     *  View port height.\n     */\n\n  }, {\n    key: \"getIframeCenter\",\n    value: function getIframeCenter() {\n      var offsetTopClient = getOffsetTop(this.iFrame);\n      var scrollTopClient = window.scrollY;\n      var viewPortHeight = window.innerHeight;\n      var iframeHeight = this.iFrame.offsetHeight;\n      var iframeScrolled = scrollTopClient - offsetTopClient;\n      var iframeVisibleViewPort;\n      var iframeOffset;\n\n      if (iframeScrolled < 0) {\n        iframeVisibleViewPort = viewPortHeight - (offsetTopClient - scrollTopClient);\n        iframeVisibleViewPort = Math.min(iframeHeight, iframeVisibleViewPort);\n        iframeOffset = 0;\n      } else {\n        iframeVisibleViewPort = Math.min(iframeHeight - iframeScrolled, viewPortHeight);\n        iframeOffset = iframeScrolled;\n      }\n\n      var iframeCenter = iframeOffset + iframeVisibleViewPort / 2;\n      return {\n        iframeCenter: iframeCenter,\n        iframeScrolled: iframeScrolled,\n        iframeHeight: iframeHeight,\n        viewPortHeight: viewPortHeight,\n        iframeVisibleViewPort: iframeVisibleViewPort\n      };\n    }\n    /**\n     * Registers an event listener to trigger an alert when the ThoughtSpot app\n     * sends an event of a particular message type to the host application.\n     *\n     * @param messageType The message type\n     * @param callback A callback as a function\n     * @param options The message options\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(messageType, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        start: false\n      };\n\n      if (this.isRendered) {\n        this.handleError('Please register event handlers before calling render');\n      }\n\n      var callbacks = this.eventHandlerMap.get(messageType) || [];\n      callbacks.push({\n        options: options,\n        callback: callback\n      });\n      this.eventHandlerMap.set(messageType, callbacks);\n      return this;\n    }\n    /**\n     * Triggers an event on specific Port registered against\n     * for the EmbedEvent\n     * @param eventType The message type\n     * @param data The payload to send\n     */\n\n  }, {\n    key: \"triggerEventOnPort\",\n    value: function triggerEventOnPort(eventPort, payload) {\n      if (eventPort) {\n        try {\n          eventPort.postMessage({\n            type: payload.type,\n            data: payload.data\n          });\n        } catch (e) {\n          eventPort.postMessage({\n            error: e\n          });\n          console.log(e);\n        }\n      } else {\n        console.log('Event Port is not defined');\n      }\n    }\n    /**\n     * Triggers an event to the embedded app\n     * @param messageType The event type\n     * @param data The payload to send with the message\n     */\n\n  }, {\n    key: \"trigger\",\n    value: function trigger(messageType, data) {\n      uploadMixpanelEvent(\"\".concat(MIXPANEL_EVENT.VISUAL_SDK_TRIGGER, \"-\").concat(messageType));\n      return processTrigger(this.iFrame, messageType, this.thoughtSpotHost, data);\n    }\n    /**\n     * Marks the ThoughtSpot object to have been rendered\n     * Needs to be overridden by subclasses to do the actual\n     * rendering of the iframe.\n     * @param args\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.isRendered = true;\n      return this;\n    }\n    /**\n     * Get the Post Url Params for THOUGHTSPOT from the current\n     * host app URL.\n     * THOUGHTSPOT URL params starts with a prefix \"ts-\"\n     */\n\n  }, {\n    key: \"getThoughtSpotPostUrlParams\",\n    value: function getThoughtSpotPostUrlParams() {\n      var urlHash = window.location.hash;\n      var queryParams = window.location.search;\n      var postHashParams = urlHash.split('?');\n      var postURLParams = postHashParams[postHashParams.length - 1];\n      var queryParamsObj = new URLSearchParams(queryParams);\n      var postURLParamsObj = new URLSearchParams(postURLParams);\n      var params = new URLSearchParams();\n\n      var addKeyValuePairCb = function addKeyValuePairCb(value, key) {\n        if (key.startsWith(THOUGHTSPOT_PARAM_PREFIX)) {\n          params.append(key, value);\n        }\n      };\n\n      queryParamsObj.forEach(addKeyValuePairCb);\n      postURLParamsObj.forEach(addKeyValuePairCb);\n      var tsParams = params.toString();\n      tsParams = tsParams ? \"?\".concat(tsParams) : '';\n      return tsParams;\n    }\n  }]);\n\n  return TsEmbed;\n}();\n/**\n * Base class for embedding v1 experience\n * Note: The v1 version of ThoughtSpot Blink works on the AngularJS stack\n * which is currently under migration to v2\n */\n\nexport var V1Embed = /*#__PURE__*/function (_TsEmbed) {\n  _inherits(V1Embed, _TsEmbed);\n\n  var _super = _createSuper(V1Embed);\n\n  function V1Embed(domSelector, viewConfig) {\n    var _this5;\n\n    _classCallCheck(this, V1Embed);\n\n    _this5 = _super.call(this, domSelector, viewConfig);\n    _this5.viewConfig = viewConfig;\n    return _this5;\n  }\n  /**\n   * Render the app in an iframe and set up event handlers\n   * @param iframeSrc\n   */\n\n\n  _createClass(V1Embed, [{\n    key: \"renderV1Embed\",\n    value: function renderV1Embed(iframeSrc) {\n      this.renderIFrame(iframeSrc, this.viewConfig.frameParams);\n    } // @override\n\n  }, {\n    key: \"on\",\n    value: function on(messageType, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        start: false\n      };\n      var eventType = this.getCompatibleEventType(messageType);\n      return _get(_getPrototypeOf(V1Embed.prototype), \"on\", this).call(this, eventType, callback, options);\n    }\n  }]);\n\n  return V1Embed;\n}(TsEmbed);","map":{"version":3,"mappings":"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","names":["getEncodedQueryParamsString","getCssDimension","getOffsetTop","embedEventStatus","setAttributes","getCustomisations","getThoughtSpotHost","URL_MAX_LENGTH","DEFAULT_EMBED_WIDTH","DEFAULT_EMBED_HEIGHT","getV2BasePath","EmbedEvent","Action","Param","uploadMixpanelEvent","MIXPANEL_EVENT","processEventData","processTrigger","pkgInfo","getAuthPromise","getEmbedConfig","renderInQueue","version","THOUGHTSPOT_PARAM_PREFIX","V1EventMap","Data","V1Data","TsEmbed","domSelector","viewConfig","ReportError","_","responder","type","APP_INIT","data","customisations","embedConfig","on","appInitCb","el","getDOMNode","thoughtSpotHost","thoughtSpotV2Base","eventHandlerMap","Map","isError","shouldEncodeUrlQueryParams","registerAppInit","document","querySelector","handleError","error","executeCallbacks","Error","console","event","_a","_b","__type","ports","length","eventType","eventData","payload","window","addEventListener","getEventType","eventPort","getEventPort","formatEventData","source","iFrame","contentWindow","query","queryString","substr","basePath","filter","x","join","queryParams","hostAppUrl","location","host","includes","HostAppUrl","encodeURIComponent","ViewPortHeight","innerHeight","ViewPortWidth","innerWidth","Version","disableLoginRedirect","autoLogin","DisableLoginRedirect","customCssUrl","CustomCSSUrl","disabledActions","disabledActionReason","hiddenActions","visibleActions","showAlerts","additionalFlags","locale","Array","isArray","DisableActions","DisableActionReason","HideActions","defaultHiddenActions","VisibleActions","undefined","ShowAlerts","Locale","constructor","name","Object","assign","showPrimaryNavbar","disableProfileAndHelp","isAppEmbed","enableSearchAssist","queryStringFrag","primaryNavParam","disableProfileAndHelpParam","enableSearchAssistParam","EnableSearchAssist","path","url","frameOptions","throwInitError","nextInQueue","initTimestamp","Date","now","Init","timestamp","VISUAL_SDK_RENDER_START","then","isLoggedIn","innerHTML","loginFailedMessage","VISUAL_SDK_RENDER_COMPLETE","createElement","src","allowFullscreen","webkitallowfullscreen","mozallowfullscreen","frameHeight","height","frameWidth","width","restParams","style","border","loadTimestamp","Load","VISUAL_SDK_IFRAME_LOAD_PERFORMANCE","timeTookToLoad","appendChild","prefetchIframe","querySelectorAll","forEach","remove","subscribeToEvents","catch","VISUAL_SDK_RENDER_FAILED","callbacks","get","allHandlers","ALL","push","dataStatus","status","END","callbackObj","options","start","START","callback","triggerEventOnPort","offsetTopClient","scrollTopClient","scrollY","viewPortHeight","iframeHeight","offsetHeight","iframeScrolled","iframeVisibleViewPort","iframeOffset","Math","min","iframeCenter","messageType","isRendered","set","postMessage","e","log","VISUAL_SDK_TRIGGER","urlHash","hash","search","postHashParams","split","postURLParams","queryParamsObj","URLSearchParams","postURLParamsObj","params","addKeyValuePairCb","value","key","startsWith","append","tsParams","toString","V1Embed","iframeSrc","renderIFrame","frameParams","getCompatibleEventType"],"sourceRoot":"","sources":["../../../src/embed/ts-embed.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}