{"ast":null,"code":"import _classCallCheck from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nathan.schroeder/Documents/dev/template/thoughtspot_component/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */\n\nvar sum = function sum(x, y) {\n  return x + y;\n};\n/** @ignore */\n\n\nvar variableWidthColumnErrorMessage = function variableWidthColumnErrorMessage(type) {\n  return \"Cannot compute the byte width of variable-width column \".concat(type);\n};\n/** @ignore */\n\n\nexport var ByteWidthVisitor = /*#__PURE__*/function (_Visitor) {\n  _inherits(ByteWidthVisitor, _Visitor);\n\n  var _super = _createSuper(ByteWidthVisitor);\n\n  function ByteWidthVisitor() {\n    _classCallCheck(this, ByteWidthVisitor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ByteWidthVisitor, [{\n    key: \"visitNull\",\n    value: function visitNull(____) {\n      return 0;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(type) {\n      return type.ArrayType.BYTES_PER_ELEMENT;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(____) {\n      return 1 / 8;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(____) {\n      return 16;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(type) {\n      return type.unit === TimeUnit.SECOND ? 4 : 8;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(type) {\n      return type.byteWidth;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(type) {\n      return type.listSize * this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(type) {\n      return this.visit(type.indices);\n    }\n  }, {\n    key: \"visitFields\",\n    value: function visitFields(fields) {\n      var _this = this;\n\n      return (fields || []).map(function (field) {\n        return _this.visit(field.type);\n      });\n    }\n  }, {\n    key: \"visitSchema\",\n    value: function visitSchema(schema) {\n      return this.visitFields(schema.fields).reduce(sum, 0);\n    }\n  }]);\n\n  return ByteWidthVisitor;\n}(Visitor);\n/** @ignore */\n\nexport var instance = new ByteWidthVisitor();","map":{"version":3,"mappings":"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","names":["Visitor","TimeUnit","sum","x","y","variableWidthColumnErrorMessage","type","ByteWidthVisitor","____","bitWidth","ArrayType","BYTES_PER_ELEMENT","Error","unit","SECOND","visitFields","children","reduce","byteWidth","listSize","visit","indices","fields","map","field","schema","instance"],"sources":["visitor/bytewidth.ts"],"sourcesContent":["/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n"]},"metadata":{},"sourceType":"module"}