{"ast":null,"code":"/**\n * Copyright (c) 2022\n *\n * Embed ThoughtSpot search or a saved answer\n *\n * @summary Search embed\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\nimport { DataSourceVisualMode, Param, Action } from '../types';\nimport { getQueryParamString, checkReleaseVersionInBeta } from '../utils';\nimport { TsEmbed } from './ts-embed';\nimport { ERROR_MESSAGE } from '../errors';\nimport { getAuthPromise, getEmbedConfig } from './base';\nimport { getReleaseVersion } from '../auth';\nexport const HiddenActionItemByDefaultForSearchEmbed = [Action.EditACopy, Action.SaveAsView, Action.UpdateTML, Action.EditTML, Action.AnswerDelete];\n/**\n * Embed ThoughtSpot search\n *\n * @Category Search Embed\n */\n\nexport class SearchEmbed extends TsEmbed {\n  constructor(domSelector, viewConfig) {\n    super(domSelector);\n    this.viewConfig = viewConfig;\n  }\n  /**\n   * Get the state of the data sources panel that the embedded\n   * ThoughtSpot search will be initialized with.\n   */\n\n\n  getDataSourceMode() {\n    let dataSourceMode = DataSourceVisualMode.Expanded;\n\n    if (this.viewConfig.collapseDataSources === true) {\n      dataSourceMode = DataSourceVisualMode.Collapsed;\n    }\n\n    if (this.viewConfig.hideDataSources === true) {\n      dataSourceMode = DataSourceVisualMode.Hidden;\n    }\n\n    return dataSourceMode;\n  }\n  /**\n   * Construct the URL of the embedded ThoughtSpot search to be\n   * loaded in the iframe\n   * @param answerId The GUID of a saved answer\n   * @param dataSources A list of data source GUIDs\n   */\n\n\n  getIFrameSrc(answerId, dataSources) {\n    var _a;\n\n    const {\n      hideResults,\n      expandAllDataSource,\n      enableSearchAssist,\n      forceTable,\n      searchOptions\n    } = this.viewConfig;\n    const answerPath = answerId ? `saved-answer/${answerId}` : 'answer';\n    const queryParams = this.getBaseQueryParams();\n    queryParams[Param.HideActions] = [...((_a = queryParams[Param.HideActions]) !== null && _a !== void 0 ? _a : []), ...HiddenActionItemByDefaultForSearchEmbed];\n\n    if (dataSources && dataSources.length) {\n      queryParams[Param.DataSources] = JSON.stringify(dataSources);\n    }\n\n    if (searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.searchTokenString) {\n      queryParams[Param.searchTokenString] = encodeURIComponent(searchOptions.searchTokenString);\n\n      if (searchOptions.executeSearch) {\n        queryParams[Param.executeSearch] = true;\n      }\n    }\n\n    if (enableSearchAssist) {\n      queryParams[Param.EnableSearchAssist] = true;\n    }\n\n    if (hideResults) {\n      queryParams[Param.HideResult] = true;\n    }\n\n    if (forceTable) {\n      queryParams[Param.ForceTable] = true;\n    }\n\n    queryParams[Param.DataSourceMode] = this.getDataSourceMode();\n    queryParams[Param.UseLastSelectedDataSource] = false;\n    queryParams[Param.searchEmbed] = true;\n    let query = '';\n    const queryParamsString = getQueryParamString(queryParams, true);\n\n    if (queryParamsString) {\n      query = `?${queryParamsString}`;\n    }\n\n    const tsPostHashParams = this.getThoughtSpotPostUrlParams();\n    return `${this.getEmbedBasePath(query)}/${answerPath}${tsPostHashParams}`;\n  }\n  /**\n   * Render the embedded ThoughtSpot search\n   */\n\n\n  render() {\n    super.render();\n    const {\n      answerId,\n      dataSources\n    } = this.viewConfig;\n    const src = this.getIFrameSrc(answerId, dataSources);\n    this.renderIFrame(src, this.viewConfig.frameParams);\n    getAuthPromise().then(() => {\n      if (checkReleaseVersionInBeta(getReleaseVersion(), getEmbedConfig().suppressSearchEmbedBetaWarning)) {\n        alert(ERROR_MESSAGE.SEARCHEMBED_BETA_WRANING_MESSAGE);\n      }\n    });\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["DataSourceVisualMode","Param","Action","getQueryParamString","checkReleaseVersionInBeta","TsEmbed","ERROR_MESSAGE","getAuthPromise","getEmbedConfig","getReleaseVersion","HiddenActionItemByDefaultForSearchEmbed","EditACopy","SaveAsView","UpdateTML","EditTML","AnswerDelete","SearchEmbed","constructor","domSelector","viewConfig","getDataSourceMode","dataSourceMode","Expanded","collapseDataSources","Collapsed","hideDataSources","Hidden","getIFrameSrc","answerId","dataSources","hideResults","expandAllDataSource","enableSearchAssist","forceTable","searchOptions","answerPath","queryParams","getBaseQueryParams","HideActions","_a","length","DataSources","JSON","stringify","searchTokenString","encodeURIComponent","executeSearch","EnableSearchAssist","HideResult","ForceTable","DataSourceMode","UseLastSelectedDataSource","searchEmbed","query","queryParamsString","tsPostHashParams","getThoughtSpotPostUrlParams","getEmbedBasePath","render","src","renderIFrame","frameParams","then","suppressSearchEmbedBetaWarning","alert","SEARCHEMBED_BETA_WRANING_MESSAGE"],"sourceRoot":"","sources":["../../../src/embed/search.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}