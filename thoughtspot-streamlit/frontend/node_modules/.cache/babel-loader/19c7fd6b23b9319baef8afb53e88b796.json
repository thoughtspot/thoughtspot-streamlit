{"ast":null,"code":"/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\n\nvar StreamlitComponentBase =\n/** @class */\nfunction (_super) {\n  __extends(StreamlitComponentBase, _super);\n\n  function StreamlitComponentBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StreamlitComponentBase.prototype.componentDidMount = function () {\n    // After we're rendered for the first time, tell Streamlit that our height\n    // has changed.\n    Streamlit.setFrameHeight();\n  };\n\n  StreamlitComponentBase.prototype.componentDidUpdate = function () {\n    // After we're updated, tell Streamlit that our height may have changed.\n    Streamlit.setFrameHeight();\n  };\n\n  return StreamlitComponentBase;\n}(React.PureComponent);\n\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\n\nexport function withStreamlitConnection(WrappedComponent) {\n  var ComponentWrapper =\n  /** @class */\n  function (_super) {\n    __extends(ComponentWrapper, _super);\n\n    function ComponentWrapper(props) {\n      var _this = _super.call(this, props) || this;\n\n      _this.componentDidMount = function () {\n        // Set up event listeners, and signal to Streamlit that we're ready.\n        // We won't render the component until we receive the first RENDER_EVENT.\n        Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n        Streamlit.setComponentReady();\n      };\n\n      _this.componentDidUpdate = function () {\n        // If our child threw an error, we display it in render(). In this\n        // case, the child won't be mounted and therefore won't call\n        // `setFrameHeight` on its own. We do it here so that the rendered\n        // error will be visible.\n        if (_this.state.componentError != null) {\n          Streamlit.setFrameHeight();\n        }\n      };\n\n      _this.componentWillUnmount = function () {\n        Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n      };\n      /**\n       * Streamlit is telling this component to redraw.\n       * We save the render data in State, so that it can be passed to the\n       * component in our own render() function.\n       */\n\n\n      _this.onRenderEvent = function (event) {\n        // Update our state with the newest render data\n        var renderEvent = event;\n\n        _this.setState({\n          renderData: renderEvent.detail\n        });\n      };\n\n      _this.render = function () {\n        // If our wrapped component threw an error, display it.\n        if (_this.state.componentError != null) {\n          return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Component Error\"), React.createElement(\"span\", null, _this.state.componentError.message));\n        } // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n\n\n        if (_this.state.renderData == null) {\n          return null;\n        }\n\n        return React.createElement(WrappedComponent, {\n          width: window.innerWidth,\n          disabled: _this.state.renderData.disabled,\n          args: _this.state.renderData.args,\n          theme: _this.state.renderData.theme\n        });\n      };\n\n      _this.state = {\n        renderData: undefined,\n        componentError: undefined\n      };\n      return _this;\n    }\n    /**\n     * Error boundary function. This will be called if our wrapped\n     * component throws an error. We store the caught error in our state,\n     * and display it in the next render().\n     */\n\n\n    ComponentWrapper.getDerivedStateFromError = function (error) {\n      return {\n        componentError: error\n      };\n    };\n\n    return ComponentWrapper;\n  }(React.PureComponent);\n\n  return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","hoistNonReactStatics","React","Streamlit","StreamlitComponentBase","_super","apply","arguments","componentDidMount","setFrameHeight","componentDidUpdate","PureComponent","withStreamlitConnection","WrappedComponent","ComponentWrapper","props","_this","call","events","addEventListener","RENDER_EVENT","onRenderEvent","setComponentReady","state","componentError","componentWillUnmount","removeEventListener","event","renderEvent","setState","renderData","detail","render","createElement","message","width","window","innerWidth","disabled","args","theme","undefined","getDerivedStateFromError","error"],"sources":["/Users/nathan.schroeder/Documents/dev/template/streamlit_thoughtspot/frontend/node_modules/streamlit-component-lib/dist/StreamlitReact.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}