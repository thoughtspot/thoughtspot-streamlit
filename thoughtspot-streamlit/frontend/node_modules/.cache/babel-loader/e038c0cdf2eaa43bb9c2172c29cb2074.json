{"ast":null,"code":"/**\n * Copyright (c) 2022\n *\n * Common utility functions for ThoughtSpot Visual Embed SDK\n *\n * @summary Utils\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\n\n/**\n * Construct a runtime filters query string from the given filters.\n * Refer to the following docs for more details on runtime filter syntax:\n * https://cloud-docs.thoughtspot.com/admin/ts-cloud/apply-runtime-filter.html\n * https://cloud-docs.thoughtspot.com/admin/ts-cloud/runtime-filter-operators.html\n * @param runtimeFilters\n */\nexport const getFilterQuery = runtimeFilters => {\n  if (runtimeFilters && runtimeFilters.length) {\n    const filters = runtimeFilters.map((filter, valueIndex) => {\n      const index = valueIndex + 1;\n      const filterExpr = [];\n      filterExpr.push(`col${index}=${filter.columnName}`);\n      filterExpr.push(`op${index}=${filter.operator}`);\n      filterExpr.push(filter.values.map(value => `val${index}=${value}`).join('&'));\n      return filterExpr.join('&');\n    });\n    return `${filters.join('&')}`;\n  }\n\n  return null;\n};\n/**\n * Convert a value to a string representation to be sent as a query\n * parameter to the ThoughtSpot app.\n * @param value Any parameter value\n */\n\nconst serializeParam = value => {\n  // do not serialize primitive types\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    return value;\n  }\n\n  return JSON.stringify(value);\n};\n/**\n * Convert a value to a string:\n * in case of an array, we convert it to CSV.\n * in case of any other type, we directly return the value.\n * @param value\n */\n\n\nconst paramToString = value => Array.isArray(value) ? value.join(',') : value;\n/**\n * Return a query param string composed from the given params object\n * @param queryParams\n */\n\n\nexport const getQueryParamString = function (queryParams) {\n  let shouldSerializeParamValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const qp = [];\n  const params = Object.keys(queryParams);\n  params.forEach(key => {\n    const val = queryParams[key];\n\n    if (val !== undefined) {\n      const serializedValue = shouldSerializeParamValues ? serializeParam(val) : paramToString(val);\n      qp.push(`${key}=${serializedValue}`);\n    }\n  });\n\n  if (qp.length) {\n    return qp.join('&');\n  }\n\n  return null;\n};\n/**\n * Get a string representation of a dimension value in CSS\n * If numeric, it is considered in pixels.\n * @param value\n */\n\nexport const getCssDimension = value => {\n  if (typeof value === 'number') {\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * Append a string to a URL's hash fragment\n * @param url A URL\n * @param stringToAppend The string to append to the URL hash\n */\n\nexport const appendToUrlHash = (url, stringToAppend) => {\n  let outputUrl = url;\n  const encStringToAppend = encodeURIComponent(stringToAppend);\n\n  if (url.indexOf('#') >= 0) {\n    outputUrl = `${outputUrl}${encStringToAppend}`;\n  } else {\n    outputUrl = `${outputUrl}#${encStringToAppend}`;\n  }\n\n  return outputUrl;\n};\nexport function getRedirectUrl(url, stringToAppend) {\n  let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  const targetUrl = path ? new URL(path, window.location.origin).href : url;\n  return appendToUrlHash(targetUrl, stringToAppend);\n}\nexport const getEncodedQueryParamsString = queryString => {\n  if (!queryString) {\n    return queryString;\n  }\n\n  return btoa(queryString).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n};\nexport const getOffsetTop = element => {\n  const rect = element.getBoundingClientRect();\n  return rect.top + window.scrollY;\n};\nexport const embedEventStatus = {\n  START: 'start',\n  END: 'end'\n};\nexport const setAttributes = (element, attributes) => {\n  Object.keys(attributes).forEach(key => {\n    element.setAttribute(key, attributes[key].toString());\n  });\n};\n\nconst isCloudRelease = version => version.endsWith('.cl');\n/* For Search Embed: ReleaseVersionInBeta */\n\n\nexport const checkReleaseVersionInBeta = (releaseVersion, suppressBetaWarning) => {\n  if (releaseVersion !== '' && !isCloudRelease(releaseVersion)) {\n    const splittedReleaseVersion = releaseVersion.split('.');\n    const majorVersion = Number(splittedReleaseVersion[0]);\n    const isBetaVersion = majorVersion < 8;\n    return !suppressBetaWarning && isBetaVersion;\n  }\n\n  return false;\n};\nexport const getCustomisations = embedConfig => {\n  const {\n    customCssUrl\n  } = embedConfig;\n  let {\n    customisations\n  } = embedConfig;\n  customisations = customisations || {};\n  customisations.style = customisations.style || {};\n  customisations.style.customCSSUrl = customisations.style.customCSSUrl || customCssUrl;\n  return customisations;\n};","map":{"version":3,"mappings":"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","names":["getFilterQuery","runtimeFilters","length","filters","map","filter","valueIndex","index","filterExpr","push","columnName","operator","values","value","join","serializeParam","JSON","stringify","paramToString","Array","isArray","getQueryParamString","queryParams","shouldSerializeParamValues","qp","params","Object","keys","forEach","key","val","undefined","serializedValue","getCssDimension","appendToUrlHash","url","stringToAppend","outputUrl","encStringToAppend","encodeURIComponent","indexOf","getRedirectUrl","path","targetUrl","URL","window","location","origin","href","getEncodedQueryParamsString","queryString","btoa","replace","getOffsetTop","element","rect","getBoundingClientRect","top","scrollY","embedEventStatus","START","END","setAttributes","attributes","setAttribute","toString","isCloudRelease","version","endsWith","checkReleaseVersionInBeta","releaseVersion","suppressBetaWarning","splittedReleaseVersion","split","majorVersion","Number","isBetaVersion","getCustomisations","embedConfig","customCssUrl","customisations","style","customCSSUrl"],"sourceRoot":"","sources":["../../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}