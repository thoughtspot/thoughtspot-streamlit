{"ast":null,"code":"import { ERROR_MESSAGE } from '../errors';\nimport { HostEvent } from '../types';\n/**\n * Reloads the ThoughtSpot iframe.\n */\n\nfunction reload(iFrame) {\n  const oldFrame = iFrame.cloneNode();\n  const parent = iFrame.parentNode;\n  parent.removeChild(iFrame);\n  parent.appendChild(oldFrame);\n}\n/**\n * Post Iframe message.\n */\n\n\nfunction postIframeMessage(iFrame, message, thoughtSpotHost, channel) {\n  return iFrame.contentWindow.postMessage(message, thoughtSpotHost, [channel === null || channel === void 0 ? void 0 : channel.port2]);\n}\n\nconst TRIGGER_TIMEOUT = 30000;\nexport function processTrigger(iFrame, messageType, thoughtSpotHost, data) {\n  return new Promise((res, rej) => {\n    if (messageType === HostEvent.Reload) {\n      reload(iFrame);\n      return res(null);\n    }\n\n    const channel = new MessageChannel();\n\n    channel.port1.onmessage = _ref => {\n      let {\n        data: responseData\n      } = _ref;\n      channel.port1.close();\n\n      if (responseData.error) {\n        rej(responseData.error);\n      } else {\n        res(responseData);\n      }\n    }; // Close the messageChannel and resolve the promise if timeout.\n\n\n    setTimeout(() => {\n      channel.port1.close();\n      res(new Error(ERROR_MESSAGE.TRIGGER_TIMED_OUT));\n    }, TRIGGER_TIMEOUT);\n    return postIframeMessage(iFrame, {\n      type: messageType,\n      data\n    }, thoughtSpotHost, channel);\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,WAA9B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA;;;;AAGA,SAASC,MAAT,CAAgBC,MAAhB,EAAyC;EACrC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,SAAP,EAAjB;EACA,MAAMC,MAAM,GAAGH,MAAM,CAACI,UAAtB;EACAD,MAAM,CAACE,WAAP,CAAmBL,MAAnB;EACAG,MAAM,CAACG,WAAP,CAAmBL,QAAnB;AACH;AAED;;;;;AAGA,SAASM,iBAAT,CACIP,MADJ,EAEIQ,OAFJ,EAGIC,eAHJ,EAIIC,OAJJ,EAI4B;EAExB,OAAOV,MAAM,CAACW,aAAP,CAAqBC,WAArB,CAAiCJ,OAAjC,EAA0CC,eAA1C,EAA2D,CAC9DC,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEG,KADqD,CAA3D,CAAP;AAGH;;AAED,MAAMC,eAAe,GAAG,KAAxB;AAEA,OAAM,SAAUC,cAAV,CACFf,MADE,EAEFgB,WAFE,EAGFP,eAHE,EAIFQ,IAJE,EAIO;EAET,OAAO,IAAIC,OAAJ,CAAiB,CAACC,GAAD,EAAMC,GAAN,KAAa;IACjC,IAAIJ,WAAW,KAAKlB,SAAS,CAACuB,MAA9B,EAAsC;MAClCtB,MAAM,CAACC,MAAD,CAAN;MACA,OAAOmB,GAAG,CAAC,IAAD,CAAV;IACH;;IACD,MAAMT,OAAO,GAAG,IAAIY,cAAJ,EAAhB;;IACAZ,OAAO,CAACa,KAAR,CAAcC,SAAd,GAA0B,QAA2B;MAAA,IAA1B;QAAEP,IAAI,EAAEQ;MAAR,CAA0B;MACjDf,OAAO,CAACa,KAAR,CAAcG,KAAd;;MACA,IAAID,YAAY,CAACE,KAAjB,EAAwB;QACpBP,GAAG,CAACK,YAAY,CAACE,KAAd,CAAH;MACH,CAFD,MAEO;QACHR,GAAG,CAACM,YAAD,CAAH;MACH;IACJ,CAPD,CANiC,CAejC;;;IACAG,UAAU,CAAC,MAAK;MACZlB,OAAO,CAACa,KAAR,CAAcG,KAAd;MACAP,GAAG,CAAC,IAAIU,KAAJ,CAAUhC,aAAa,CAACiC,iBAAxB,CAAD,CAAH;IACH,CAHS,EAGPhB,eAHO,CAAV;IAKA,OAAOP,iBAAiB,CACpBP,MADoB,EAEpB;MAAE+B,IAAI,EAAEf,WAAR;MAAqBC;IAArB,CAFoB,EAGpBR,eAHoB,EAIpBC,OAJoB,CAAxB;EAMH,CA3BM,CAAP;AA4BH","names":["ERROR_MESSAGE","HostEvent","reload","iFrame","oldFrame","cloneNode","parent","parentNode","removeChild","appendChild","postIframeMessage","message","thoughtSpotHost","channel","contentWindow","postMessage","port2","TRIGGER_TIMEOUT","processTrigger","messageType","data","Promise","res","rej","Reload","MessageChannel","port1","onmessage","responseData","close","error","setTimeout","Error","TRIGGER_TIMED_OUT","type"],"sourceRoot":"","sources":["../../../src/utils/processTrigger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}